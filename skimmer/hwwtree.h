// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/nfs-7/userdata/phchang/babies/HWW2016_v1.15.1/merged/GluGluHToWWToLNuQQ_M125_13TeV_powheg_JHUGenV628_1.root", "t", "hwwtree", "tas", "hww")

#ifndef hwwtree_H
#define hwwtree_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PxPyPzE4D<float> > LorentzVector;

using namespace std; 
class hwwtree {
 private: 
 protected: 
  unsigned int index;
  int      run_;
  TBranch *run_branch;
  bool     run_isLoaded;
  int      lumi_;
  TBranch *lumi_branch;
  bool     lumi_isLoaded;
  unsigned long long evt_;
  TBranch *evt_branch;
  bool     evt_isLoaded;
  int      isData_;
  TBranch *isData_branch;
  bool     isData_isLoaded;
  float    evt_scale1fb_;
  TBranch *evt_scale1fb_branch;
  bool     evt_scale1fb_isLoaded;
  float    genps_weight_;
  TBranch *genps_weight_branch;
  bool     genps_weight_isLoaded;
  float    xsec_br_;
  TBranch *xsec_br_branch;
  bool     xsec_br_isLoaded;
  int      evt_passgoodrunlist_;
  TBranch *evt_passgoodrunlist_branch;
  bool     evt_passgoodrunlist_isLoaded;
  TString *CMS4path_;
  TBranch *CMS4path_branch;
  bool     CMS4path_isLoaded;
  int      CMS4index_;
  TBranch *CMS4index_branch;
  bool     CMS4index_isLoaded;
  float    weight_fr_r1_f1_;
  TBranch *weight_fr_r1_f1_branch;
  bool     weight_fr_r1_f1_isLoaded;
  float    weight_fr_r1_f2_;
  TBranch *weight_fr_r1_f2_branch;
  bool     weight_fr_r1_f2_isLoaded;
  float    weight_fr_r1_f0p5_;
  TBranch *weight_fr_r1_f0p5_branch;
  bool     weight_fr_r1_f0p5_isLoaded;
  float    weight_fr_r2_f1_;
  TBranch *weight_fr_r2_f1_branch;
  bool     weight_fr_r2_f1_isLoaded;
  float    weight_fr_r2_f2_;
  TBranch *weight_fr_r2_f2_branch;
  bool     weight_fr_r2_f2_isLoaded;
  float    weight_fr_r2_f0p5_;
  TBranch *weight_fr_r2_f0p5_branch;
  bool     weight_fr_r2_f0p5_isLoaded;
  float    weight_fr_r0p5_f1_;
  TBranch *weight_fr_r0p5_f1_branch;
  bool     weight_fr_r0p5_f1_isLoaded;
  float    weight_fr_r0p5_f2_;
  TBranch *weight_fr_r0p5_f2_branch;
  bool     weight_fr_r0p5_f2_isLoaded;
  float    weight_fr_r0p5_f0p5_;
  TBranch *weight_fr_r0p5_f0p5_branch;
  bool     weight_fr_r0p5_f0p5_isLoaded;
  float    weight_pdf_up_;
  TBranch *weight_pdf_up_branch;
  bool     weight_pdf_up_isLoaded;
  float    weight_pdf_down_;
  TBranch *weight_pdf_down_branch;
  bool     weight_pdf_down_isLoaded;
  float    weight_alphas_down_;
  TBranch *weight_alphas_down_branch;
  bool     weight_alphas_down_isLoaded;
  float    weight_alphas_up_;
  TBranch *weight_alphas_up_branch;
  bool     weight_alphas_up_isLoaded;
  float    weight_isr_;
  TBranch *weight_isr_branch;
  bool     weight_isr_isLoaded;
  float    weight_isr_up_;
  TBranch *weight_isr_up_branch;
  bool     weight_isr_up_isLoaded;
  float    weight_isr_down_;
  TBranch *weight_isr_down_branch;
  bool     weight_isr_down_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *lep_p4_;
  TBranch *lep_p4_branch;
  bool     lep_p4_isLoaded;
  vector<int> *lep_id_;
  TBranch *lep_id_branch;
  bool     lep_id_isLoaded;
  vector<int> *lep_idx_;
  TBranch *lep_idx_branch;
  bool     lep_idx_isLoaded;
  vector<float> *lep_pt_;
  TBranch *lep_pt_branch;
  bool     lep_pt_isLoaded;
  vector<float> *lep_eta_;
  TBranch *lep_eta_branch;
  bool     lep_eta_isLoaded;
  vector<float> *lep_phi_;
  TBranch *lep_phi_branch;
  bool     lep_phi_isLoaded;
  vector<float> *lep_miniIsoEA_;
  TBranch *lep_miniIsoEA_branch;
  bool     lep_miniIsoEA_isLoaded;
  vector<float> *lep_relIso03EA_;
  TBranch *lep_relIso03EA_branch;
  bool     lep_relIso03EA_isLoaded;
  vector<float> *lep_relIso04DB_;
  TBranch *lep_relIso04DB_branch;
  bool     lep_relIso04DB_isLoaded;
  vector<float> *lep_customrelIso005EA_;
  TBranch *lep_customrelIso005EA_branch;
  bool     lep_customrelIso005EA_isLoaded;
  vector<float> *lep_customrelIso01EA_;
  TBranch *lep_customrelIso01EA_branch;
  bool     lep_customrelIso01EA_isLoaded;
  vector<float> *lep_customrelIso015EA_;
  TBranch *lep_customrelIso015EA_branch;
  bool     lep_customrelIso015EA_isLoaded;
  vector<float> *lep_customrelIso02EA_;
  TBranch *lep_customrelIso02EA_branch;
  bool     lep_customrelIso02EA_isLoaded;
  vector<float> *lep_customrelIso025EA_;
  TBranch *lep_customrelIso025EA_branch;
  bool     lep_customrelIso025EA_isLoaded;
  vector<float> *lep_customrelIso03EA_;
  TBranch *lep_customrelIso03EA_branch;
  bool     lep_customrelIso03EA_isLoaded;
  vector<float> *lep_customrelIso035EA_;
  TBranch *lep_customrelIso035EA_branch;
  bool     lep_customrelIso035EA_isLoaded;
  vector<float> *lep_customrelIso04EA_;
  TBranch *lep_customrelIso04EA_branch;
  bool     lep_customrelIso04EA_isLoaded;
  vector<float> *lep_customrelIso045EA_;
  TBranch *lep_customrelIso045EA_branch;
  bool     lep_customrelIso045EA_isLoaded;
  vector<float> *lep_customrelIso05EA_;
  TBranch *lep_customrelIso05EA_branch;
  bool     lep_customrelIso05EA_isLoaded;
  vector<float> *lep_customrelIso055EA_;
  TBranch *lep_customrelIso055EA_branch;
  bool     lep_customrelIso055EA_isLoaded;
  vector<float> *lep_customrelIso06EA_;
  TBranch *lep_customrelIso06EA_branch;
  bool     lep_customrelIso06EA_isLoaded;
  vector<float> *lep_customrelIso065EA_;
  TBranch *lep_customrelIso065EA_branch;
  bool     lep_customrelIso065EA_isLoaded;
  vector<float> *lep_customrelIso07EA_;
  TBranch *lep_customrelIso07EA_branch;
  bool     lep_customrelIso07EA_isLoaded;
  vector<float> *lep_customrelIso075EA_;
  TBranch *lep_customrelIso075EA_branch;
  bool     lep_customrelIso075EA_isLoaded;
  vector<float> *lep_customrelIso08EA_;
  TBranch *lep_customrelIso08EA_branch;
  bool     lep_customrelIso08EA_isLoaded;
  int      nrecolep_;
  TBranch *nrecolep_branch;
  bool     nrecolep_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep_p4_0_;
  TBranch *lep_p4_0_branch;
  bool     lep_p4_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep_p4_1_;
  TBranch *lep_p4_1_branch;
  bool     lep_p4_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep_p4_2_;
  TBranch *lep_p4_2_branch;
  bool     lep_p4_2_isLoaded;
  float    lep_pt_0_;
  TBranch *lep_pt_0_branch;
  bool     lep_pt_0_isLoaded;
  float    lep_pt_1_;
  TBranch *lep_pt_1_branch;
  bool     lep_pt_1_isLoaded;
  float    lep_pt_2_;
  TBranch *lep_pt_2_branch;
  bool     lep_pt_2_isLoaded;
  float    lep_eta_0_;
  TBranch *lep_eta_0_branch;
  bool     lep_eta_0_isLoaded;
  float    lep_eta_1_;
  TBranch *lep_eta_1_branch;
  bool     lep_eta_1_isLoaded;
  float    lep_eta_2_;
  TBranch *lep_eta_2_branch;
  bool     lep_eta_2_isLoaded;
  float    lep_phi_0_;
  TBranch *lep_phi_0_branch;
  bool     lep_phi_0_isLoaded;
  float    lep_phi_1_;
  TBranch *lep_phi_1_branch;
  bool     lep_phi_1_isLoaded;
  float    lep_phi_2_;
  TBranch *lep_phi_2_branch;
  bool     lep_phi_2_isLoaded;
  float    lep_miniIsoEA_0_;
  TBranch *lep_miniIsoEA_0_branch;
  bool     lep_miniIsoEA_0_isLoaded;
  float    lep_miniIsoEA_1_;
  TBranch *lep_miniIsoEA_1_branch;
  bool     lep_miniIsoEA_1_isLoaded;
  float    lep_miniIsoEA_2_;
  TBranch *lep_miniIsoEA_2_branch;
  bool     lep_miniIsoEA_2_isLoaded;
  float    lep_relIso03EA_0_;
  TBranch *lep_relIso03EA_0_branch;
  bool     lep_relIso03EA_0_isLoaded;
  float    lep_relIso03EA_1_;
  TBranch *lep_relIso03EA_1_branch;
  bool     lep_relIso03EA_1_isLoaded;
  float    lep_relIso03EA_2_;
  TBranch *lep_relIso03EA_2_branch;
  bool     lep_relIso03EA_2_isLoaded;
  float    lep_relIso04DB_0_;
  TBranch *lep_relIso04DB_0_branch;
  bool     lep_relIso04DB_0_isLoaded;
  float    lep_relIso04DB_1_;
  TBranch *lep_relIso04DB_1_branch;
  bool     lep_relIso04DB_1_isLoaded;
  float    lep_relIso04DB_2_;
  TBranch *lep_relIso04DB_2_branch;
  bool     lep_relIso04DB_2_isLoaded;
  int      lep_id_0_;
  TBranch *lep_id_0_branch;
  bool     lep_id_0_isLoaded;
  int      lep_id_1_;
  TBranch *lep_id_1_branch;
  bool     lep_id_1_isLoaded;
  int      lep_id_2_;
  TBranch *lep_id_2_branch;
  bool     lep_id_2_isLoaded;
  int      lep_idx_0_;
  TBranch *lep_idx_0_branch;
  bool     lep_idx_0_isLoaded;
  int      lep_idx_1_;
  TBranch *lep_idx_1_branch;
  bool     lep_idx_1_isLoaded;
  int      lep_idx_2_;
  TBranch *lep_idx_2_branch;
  bool     lep_idx_2_isLoaded;
  int      nj_;
  TBranch *nj_branch;
  bool     nj_isLoaded;
  int      nb_;
  TBranch *nb_branch;
  bool     nb_isLoaded;
  int      nbmed_;
  TBranch *nbmed_branch;
  bool     nbmed_isLoaded;
  int      nbtight_;
  TBranch *nbtight_branch;
  bool     nbtight_isLoaded;
  int      nj50_;
  TBranch *nj50_branch;
  bool     nj50_isLoaded;
  int      nb50_;
  TBranch *nb50_branch;
  bool     nb50_isLoaded;
  int      nb50med_;
  TBranch *nb50med_branch;
  bool     nb50med_isLoaded;
  int      nb50tight_;
  TBranch *nb50tight_branch;
  bool     nb50tight_isLoaded;
  int      nb30_;
  TBranch *nb30_branch;
  bool     nb30_isLoaded;
  int      nb30med_;
  TBranch *nb30med_branch;
  bool     nb30med_isLoaded;
  int      nb30tight_;
  TBranch *nb30tight_branch;
  bool     nb30tight_isLoaded;
  int      nb40_;
  TBranch *nb40_branch;
  bool     nb40_isLoaded;
  int      nb40med_;
  TBranch *nb40med_branch;
  bool     nb40med_isLoaded;
  int      nb40tight_;
  TBranch *nb40tight_branch;
  bool     nb40tight_isLoaded;
  float    ht_;
  TBranch *ht_branch;
  bool     ht_isLoaded;
  float    ht40_;
  TBranch *ht40_branch;
  bool     ht40_isLoaded;
  float    ht50_;
  TBranch *ht50_branch;
  bool     ht50_isLoaded;
  float    mh_;
  TBranch *mh_branch;
  bool     mh_isLoaded;
  float    mh40_;
  TBranch *mh40_branch;
  bool     mh40_isLoaded;
  float    mh50_;
  TBranch *mh50_branch;
  bool     mh50_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *alljets_p4_;
  TBranch *alljets_p4_branch;
  bool     alljets_p4_isLoaded;
  vector<float> *alljets_pt_;
  TBranch *alljets_pt_branch;
  bool     alljets_pt_isLoaded;
  vector<float> *alljets_eta_;
  TBranch *alljets_eta_branch;
  bool     alljets_eta_isLoaded;
  vector<float> *alljets_phi_;
  TBranch *alljets_phi_branch;
  bool     alljets_phi_isLoaded;
  vector<float> *alljets_csv_;
  TBranch *alljets_csv_branch;
  bool     alljets_csv_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jets_p4_;
  TBranch *jets_p4_branch;
  bool     jets_p4_isLoaded;
  vector<float> *jets_pt_;
  TBranch *jets_pt_branch;
  bool     jets_pt_isLoaded;
  vector<float> *jets_eta_;
  TBranch *jets_eta_branch;
  bool     jets_eta_isLoaded;
  vector<float> *jets_phi_;
  TBranch *jets_phi_branch;
  bool     jets_phi_isLoaded;
  vector<float> *jets_csv_;
  TBranch *jets_csv_branch;
  bool     jets_csv_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jets_up_p4_;
  TBranch *jets_up_p4_branch;
  bool     jets_up_p4_isLoaded;
  vector<float> *jets_up_pt_;
  TBranch *jets_up_pt_branch;
  bool     jets_up_pt_isLoaded;
  vector<float> *jets_up_eta_;
  TBranch *jets_up_eta_branch;
  bool     jets_up_eta_isLoaded;
  vector<float> *jets_up_phi_;
  TBranch *jets_up_phi_branch;
  bool     jets_up_phi_isLoaded;
  vector<float> *jets_up_csv_;
  TBranch *jets_up_csv_branch;
  bool     jets_up_csv_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jets_dn_p4_;
  TBranch *jets_dn_p4_branch;
  bool     jets_dn_p4_isLoaded;
  vector<float> *jets_dn_pt_;
  TBranch *jets_dn_pt_branch;
  bool     jets_dn_pt_isLoaded;
  vector<float> *jets_dn_eta_;
  TBranch *jets_dn_eta_branch;
  bool     jets_dn_eta_isLoaded;
  vector<float> *jets_dn_phi_;
  TBranch *jets_dn_phi_branch;
  bool     jets_dn_phi_isLoaded;
  vector<float> *jets_dn_csv_;
  TBranch *jets_dn_csv_branch;
  bool     jets_dn_csv_isLoaded;
  int      nak8jets_;
  TBranch *nak8jets_branch;
  bool     nak8jets_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak8jets_p4_;
  TBranch *ak8jets_p4_branch;
  bool     ak8jets_p4_isLoaded;
  vector<float> *ak8jets_pt_;
  TBranch *ak8jets_pt_branch;
  bool     ak8jets_pt_isLoaded;
  vector<float> *ak8jets_eta_;
  TBranch *ak8jets_eta_branch;
  bool     ak8jets_eta_isLoaded;
  vector<float> *ak8jets_phi_;
  TBranch *ak8jets_phi_branch;
  bool     ak8jets_phi_isLoaded;
  vector<float> *ak8jets_softdropMass_;
  TBranch *ak8jets_softdropMass_branch;
  bool     ak8jets_softdropMass_isLoaded;
  vector<float> *ak8jets_prunedMass_;
  TBranch *ak8jets_prunedMass_branch;
  bool     ak8jets_prunedMass_isLoaded;
  vector<float> *ak8jets_trimmedMass_;
  TBranch *ak8jets_trimmedMass_branch;
  bool     ak8jets_trimmedMass_isLoaded;
  vector<float> *ak8jets_mass_;
  TBranch *ak8jets_mass_branch;
  bool     ak8jets_mass_isLoaded;
  vector<float> *ak8jets_nJettinessTau1_;
  TBranch *ak8jets_nJettinessTau1_branch;
  bool     ak8jets_nJettinessTau1_isLoaded;
  vector<float> *ak8jets_nJettinessTau2_;
  TBranch *ak8jets_nJettinessTau2_branch;
  bool     ak8jets_nJettinessTau2_isLoaded;
  vector<float> *ak8jets_softdropPuppiSubjet1_;
  TBranch *ak8jets_softdropPuppiSubjet1_branch;
  bool     ak8jets_softdropPuppiSubjet1_isLoaded;
  vector<float> *ak8jets_softdropPuppiSubjet2_;
  TBranch *ak8jets_softdropPuppiSubjet2_branch;
  bool     ak8jets_softdropPuppiSubjet2_isLoaded;
  vector<float> *ak8jets_puppi_softdropMass_;
  TBranch *ak8jets_puppi_softdropMass_branch;
  bool     ak8jets_puppi_softdropMass_isLoaded;
  vector<float> *ak8jets_puppi_nJettinessTau1_;
  TBranch *ak8jets_puppi_nJettinessTau1_branch;
  bool     ak8jets_puppi_nJettinessTau1_isLoaded;
  vector<float> *ak8jets_puppi_nJettinessTau2_;
  TBranch *ak8jets_puppi_nJettinessTau2_branch;
  bool     ak8jets_puppi_nJettinessTau2_isLoaded;
  vector<float> *ak8jets_puppi_eta_;
  TBranch *ak8jets_puppi_eta_branch;
  bool     ak8jets_puppi_eta_isLoaded;
  vector<float> *ak8jets_puppi_phi_;
  TBranch *ak8jets_puppi_phi_branch;
  bool     ak8jets_puppi_phi_isLoaded;
  vector<float> *ak8jets_puppi_pt_;
  TBranch *ak8jets_puppi_pt_branch;
  bool     ak8jets_puppi_pt_isLoaded;
  vector<float> *ak8jets_puppi_mass_;
  TBranch *ak8jets_puppi_mass_branch;
  bool     ak8jets_puppi_mass_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_p4_0_;
  TBranch *jets_p4_0_branch;
  bool     jets_p4_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_p4_1_;
  TBranch *jets_p4_1_branch;
  bool     jets_p4_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_p4_2_;
  TBranch *jets_p4_2_branch;
  bool     jets_p4_2_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_up_p4_0_;
  TBranch *jets_up_p4_0_branch;
  bool     jets_up_p4_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_up_p4_1_;
  TBranch *jets_up_p4_1_branch;
  bool     jets_up_p4_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_up_p4_2_;
  TBranch *jets_up_p4_2_branch;
  bool     jets_up_p4_2_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_dn_p4_0_;
  TBranch *jets_dn_p4_0_branch;
  bool     jets_dn_p4_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_dn_p4_1_;
  TBranch *jets_dn_p4_1_branch;
  bool     jets_dn_p4_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jets_dn_p4_2_;
  TBranch *jets_dn_p4_2_branch;
  bool     jets_dn_p4_2_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak8jets_p4_0_;
  TBranch *ak8jets_p4_0_branch;
  bool     ak8jets_p4_0_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak8jets_p4_1_;
  TBranch *ak8jets_p4_1_branch;
  bool     ak8jets_p4_1_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak8jets_p4_2_;
  TBranch *ak8jets_p4_2_branch;
  bool     ak8jets_p4_2_isLoaded;
  float    jets_pt_0_;
  TBranch *jets_pt_0_branch;
  bool     jets_pt_0_isLoaded;
  float    jets_pt_1_;
  TBranch *jets_pt_1_branch;
  bool     jets_pt_1_isLoaded;
  float    jets_pt_2_;
  TBranch *jets_pt_2_branch;
  bool     jets_pt_2_isLoaded;
  float    jets_eta_0_;
  TBranch *jets_eta_0_branch;
  bool     jets_eta_0_isLoaded;
  float    jets_eta_1_;
  TBranch *jets_eta_1_branch;
  bool     jets_eta_1_isLoaded;
  float    jets_eta_2_;
  TBranch *jets_eta_2_branch;
  bool     jets_eta_2_isLoaded;
  float    jets_phi_0_;
  TBranch *jets_phi_0_branch;
  bool     jets_phi_0_isLoaded;
  float    jets_phi_1_;
  TBranch *jets_phi_1_branch;
  bool     jets_phi_1_isLoaded;
  float    jets_phi_2_;
  TBranch *jets_phi_2_branch;
  bool     jets_phi_2_isLoaded;
  float    jets_csv_0_;
  TBranch *jets_csv_0_branch;
  bool     jets_csv_0_isLoaded;
  float    jets_csv_1_;
  TBranch *jets_csv_1_branch;
  bool     jets_csv_1_isLoaded;
  float    jets_csv_2_;
  TBranch *jets_csv_2_branch;
  bool     jets_csv_2_isLoaded;
  float    jets_up_pt_0_;
  TBranch *jets_up_pt_0_branch;
  bool     jets_up_pt_0_isLoaded;
  float    jets_up_pt_1_;
  TBranch *jets_up_pt_1_branch;
  bool     jets_up_pt_1_isLoaded;
  float    jets_up_pt_2_;
  TBranch *jets_up_pt_2_branch;
  bool     jets_up_pt_2_isLoaded;
  float    jets_up_eta_0_;
  TBranch *jets_up_eta_0_branch;
  bool     jets_up_eta_0_isLoaded;
  float    jets_up_eta_1_;
  TBranch *jets_up_eta_1_branch;
  bool     jets_up_eta_1_isLoaded;
  float    jets_up_eta_2_;
  TBranch *jets_up_eta_2_branch;
  bool     jets_up_eta_2_isLoaded;
  float    jets_up_phi_0_;
  TBranch *jets_up_phi_0_branch;
  bool     jets_up_phi_0_isLoaded;
  float    jets_up_phi_1_;
  TBranch *jets_up_phi_1_branch;
  bool     jets_up_phi_1_isLoaded;
  float    jets_up_phi_2_;
  TBranch *jets_up_phi_2_branch;
  bool     jets_up_phi_2_isLoaded;
  float    jets_up_csv_0_;
  TBranch *jets_up_csv_0_branch;
  bool     jets_up_csv_0_isLoaded;
  float    jets_up_csv_1_;
  TBranch *jets_up_csv_1_branch;
  bool     jets_up_csv_1_isLoaded;
  float    jets_up_csv_2_;
  TBranch *jets_up_csv_2_branch;
  bool     jets_up_csv_2_isLoaded;
  float    jets_dn_pt_0_;
  TBranch *jets_dn_pt_0_branch;
  bool     jets_dn_pt_0_isLoaded;
  float    jets_dn_pt_1_;
  TBranch *jets_dn_pt_1_branch;
  bool     jets_dn_pt_1_isLoaded;
  float    jets_dn_pt_2_;
  TBranch *jets_dn_pt_2_branch;
  bool     jets_dn_pt_2_isLoaded;
  float    jets_dn_eta_0_;
  TBranch *jets_dn_eta_0_branch;
  bool     jets_dn_eta_0_isLoaded;
  float    jets_dn_eta_1_;
  TBranch *jets_dn_eta_1_branch;
  bool     jets_dn_eta_1_isLoaded;
  float    jets_dn_eta_2_;
  TBranch *jets_dn_eta_2_branch;
  bool     jets_dn_eta_2_isLoaded;
  float    jets_dn_phi_0_;
  TBranch *jets_dn_phi_0_branch;
  bool     jets_dn_phi_0_isLoaded;
  float    jets_dn_phi_1_;
  TBranch *jets_dn_phi_1_branch;
  bool     jets_dn_phi_1_isLoaded;
  float    jets_dn_phi_2_;
  TBranch *jets_dn_phi_2_branch;
  bool     jets_dn_phi_2_isLoaded;
  float    jets_dn_csv_0_;
  TBranch *jets_dn_csv_0_branch;
  bool     jets_dn_csv_0_isLoaded;
  float    jets_dn_csv_1_;
  TBranch *jets_dn_csv_1_branch;
  bool     jets_dn_csv_1_isLoaded;
  float    jets_dn_csv_2_;
  TBranch *jets_dn_csv_2_branch;
  bool     jets_dn_csv_2_isLoaded;
  float    ak8jets_pt_0_;
  TBranch *ak8jets_pt_0_branch;
  bool     ak8jets_pt_0_isLoaded;
  float    ak8jets_pt_1_;
  TBranch *ak8jets_pt_1_branch;
  bool     ak8jets_pt_1_isLoaded;
  float    ak8jets_pt_2_;
  TBranch *ak8jets_pt_2_branch;
  bool     ak8jets_pt_2_isLoaded;
  float    ak8jets_eta_0_;
  TBranch *ak8jets_eta_0_branch;
  bool     ak8jets_eta_0_isLoaded;
  float    ak8jets_eta_1_;
  TBranch *ak8jets_eta_1_branch;
  bool     ak8jets_eta_1_isLoaded;
  float    ak8jets_eta_2_;
  TBranch *ak8jets_eta_2_branch;
  bool     ak8jets_eta_2_isLoaded;
  float    ak8jets_phi_0_;
  TBranch *ak8jets_phi_0_branch;
  bool     ak8jets_phi_0_isLoaded;
  float    ak8jets_phi_1_;
  TBranch *ak8jets_phi_1_branch;
  bool     ak8jets_phi_1_isLoaded;
  float    ak8jets_phi_2_;
  TBranch *ak8jets_phi_2_branch;
  bool     ak8jets_phi_2_isLoaded;
  float    ak8jets_softdropMass_0_;
  TBranch *ak8jets_softdropMass_0_branch;
  bool     ak8jets_softdropMass_0_isLoaded;
  float    ak8jets_softdropMass_1_;
  TBranch *ak8jets_softdropMass_1_branch;
  bool     ak8jets_softdropMass_1_isLoaded;
  float    ak8jets_softdropMass_2_;
  TBranch *ak8jets_softdropMass_2_branch;
  bool     ak8jets_softdropMass_2_isLoaded;
  float    ak8jets_prunedMass_0_;
  TBranch *ak8jets_prunedMass_0_branch;
  bool     ak8jets_prunedMass_0_isLoaded;
  float    ak8jets_prunedMass_1_;
  TBranch *ak8jets_prunedMass_1_branch;
  bool     ak8jets_prunedMass_1_isLoaded;
  float    ak8jets_prunedMass_2_;
  TBranch *ak8jets_prunedMass_2_branch;
  bool     ak8jets_prunedMass_2_isLoaded;
  float    ak8jets_trimmedMass_0_;
  TBranch *ak8jets_trimmedMass_0_branch;
  bool     ak8jets_trimmedMass_0_isLoaded;
  float    ak8jets_trimmedMass_1_;
  TBranch *ak8jets_trimmedMass_1_branch;
  bool     ak8jets_trimmedMass_1_isLoaded;
  float    ak8jets_trimmedMass_2_;
  TBranch *ak8jets_trimmedMass_2_branch;
  bool     ak8jets_trimmedMass_2_isLoaded;
  float    ak8jets_mass_0_;
  TBranch *ak8jets_mass_0_branch;
  bool     ak8jets_mass_0_isLoaded;
  float    ak8jets_mass_1_;
  TBranch *ak8jets_mass_1_branch;
  bool     ak8jets_mass_1_isLoaded;
  float    ak8jets_mass_2_;
  TBranch *ak8jets_mass_2_branch;
  bool     ak8jets_mass_2_isLoaded;
  float    ak8jets_nJettinessTau1_0_;
  TBranch *ak8jets_nJettinessTau1_0_branch;
  bool     ak8jets_nJettinessTau1_0_isLoaded;
  float    ak8jets_nJettinessTau1_1_;
  TBranch *ak8jets_nJettinessTau1_1_branch;
  bool     ak8jets_nJettinessTau1_1_isLoaded;
  float    ak8jets_nJettinessTau1_2_;
  TBranch *ak8jets_nJettinessTau1_2_branch;
  bool     ak8jets_nJettinessTau1_2_isLoaded;
  float    ak8jets_nJettinessTau2_0_;
  TBranch *ak8jets_nJettinessTau2_0_branch;
  bool     ak8jets_nJettinessTau2_0_isLoaded;
  float    ak8jets_nJettinessTau2_1_;
  TBranch *ak8jets_nJettinessTau2_1_branch;
  bool     ak8jets_nJettinessTau2_1_isLoaded;
  float    ak8jets_nJettinessTau2_2_;
  TBranch *ak8jets_nJettinessTau2_2_branch;
  bool     ak8jets_nJettinessTau2_2_isLoaded;
  float    ak8jets_softdropPuppiSubjet1_0_;
  TBranch *ak8jets_softdropPuppiSubjet1_0_branch;
  bool     ak8jets_softdropPuppiSubjet1_0_isLoaded;
  float    ak8jets_softdropPuppiSubjet1_1_;
  TBranch *ak8jets_softdropPuppiSubjet1_1_branch;
  bool     ak8jets_softdropPuppiSubjet1_1_isLoaded;
  float    ak8jets_softdropPuppiSubjet1_2_;
  TBranch *ak8jets_softdropPuppiSubjet1_2_branch;
  bool     ak8jets_softdropPuppiSubjet1_2_isLoaded;
  float    ak8jets_softdropPuppiSubjet2_0_;
  TBranch *ak8jets_softdropPuppiSubjet2_0_branch;
  bool     ak8jets_softdropPuppiSubjet2_0_isLoaded;
  float    ak8jets_softdropPuppiSubjet2_1_;
  TBranch *ak8jets_softdropPuppiSubjet2_1_branch;
  bool     ak8jets_softdropPuppiSubjet2_1_isLoaded;
  float    ak8jets_softdropPuppiSubjet2_2_;
  TBranch *ak8jets_softdropPuppiSubjet2_2_branch;
  bool     ak8jets_softdropPuppiSubjet2_2_isLoaded;
  float    ak8jets_puppi_softdropMass_0_;
  TBranch *ak8jets_puppi_softdropMass_0_branch;
  bool     ak8jets_puppi_softdropMass_0_isLoaded;
  float    ak8jets_puppi_softdropMass_1_;
  TBranch *ak8jets_puppi_softdropMass_1_branch;
  bool     ak8jets_puppi_softdropMass_1_isLoaded;
  float    ak8jets_puppi_softdropMass_2_;
  TBranch *ak8jets_puppi_softdropMass_2_branch;
  bool     ak8jets_puppi_softdropMass_2_isLoaded;
  float    ak8jets_puppi_nJettinessTau1_0_;
  TBranch *ak8jets_puppi_nJettinessTau1_0_branch;
  bool     ak8jets_puppi_nJettinessTau1_0_isLoaded;
  float    ak8jets_puppi_nJettinessTau1_1_;
  TBranch *ak8jets_puppi_nJettinessTau1_1_branch;
  bool     ak8jets_puppi_nJettinessTau1_1_isLoaded;
  float    ak8jets_puppi_nJettinessTau1_2_;
  TBranch *ak8jets_puppi_nJettinessTau1_2_branch;
  bool     ak8jets_puppi_nJettinessTau1_2_isLoaded;
  float    ak8jets_puppi_nJettinessTau2_0_;
  TBranch *ak8jets_puppi_nJettinessTau2_0_branch;
  bool     ak8jets_puppi_nJettinessTau2_0_isLoaded;
  float    ak8jets_puppi_nJettinessTau2_1_;
  TBranch *ak8jets_puppi_nJettinessTau2_1_branch;
  bool     ak8jets_puppi_nJettinessTau2_1_isLoaded;
  float    ak8jets_puppi_nJettinessTau2_2_;
  TBranch *ak8jets_puppi_nJettinessTau2_2_branch;
  bool     ak8jets_puppi_nJettinessTau2_2_isLoaded;
  float    ak8jets_puppi_eta_0_;
  TBranch *ak8jets_puppi_eta_0_branch;
  bool     ak8jets_puppi_eta_0_isLoaded;
  float    ak8jets_puppi_eta_1_;
  TBranch *ak8jets_puppi_eta_1_branch;
  bool     ak8jets_puppi_eta_1_isLoaded;
  float    ak8jets_puppi_eta_2_;
  TBranch *ak8jets_puppi_eta_2_branch;
  bool     ak8jets_puppi_eta_2_isLoaded;
  float    ak8jets_puppi_phi_0_;
  TBranch *ak8jets_puppi_phi_0_branch;
  bool     ak8jets_puppi_phi_0_isLoaded;
  float    ak8jets_puppi_phi_1_;
  TBranch *ak8jets_puppi_phi_1_branch;
  bool     ak8jets_puppi_phi_1_isLoaded;
  float    ak8jets_puppi_phi_2_;
  TBranch *ak8jets_puppi_phi_2_branch;
  bool     ak8jets_puppi_phi_2_isLoaded;
  float    ak8jets_puppi_pt_0_;
  TBranch *ak8jets_puppi_pt_0_branch;
  bool     ak8jets_puppi_pt_0_isLoaded;
  float    ak8jets_puppi_pt_1_;
  TBranch *ak8jets_puppi_pt_1_branch;
  bool     ak8jets_puppi_pt_1_isLoaded;
  float    ak8jets_puppi_pt_2_;
  TBranch *ak8jets_puppi_pt_2_branch;
  bool     ak8jets_puppi_pt_2_isLoaded;
  float    ak8jets_puppi_mass_0_;
  TBranch *ak8jets_puppi_mass_0_branch;
  bool     ak8jets_puppi_mass_0_isLoaded;
  float    ak8jets_puppi_mass_1_;
  TBranch *ak8jets_puppi_mass_1_branch;
  bool     ak8jets_puppi_mass_1_isLoaded;
  float    ak8jets_puppi_mass_2_;
  TBranch *ak8jets_puppi_mass_2_branch;
  bool     ak8jets_puppi_mass_2_isLoaded;
  float    weight_btagsf_;
  TBranch *weight_btagsf_branch;
  bool     weight_btagsf_isLoaded;
  float    weight_btagsf_heavy_DN_;
  TBranch *weight_btagsf_heavy_DN_branch;
  bool     weight_btagsf_heavy_DN_isLoaded;
  float    weight_btagsf_heavy_UP_;
  TBranch *weight_btagsf_heavy_UP_branch;
  bool     weight_btagsf_heavy_UP_isLoaded;
  float    weight_btagsf_light_DN_;
  TBranch *weight_btagsf_light_DN_branch;
  bool     weight_btagsf_light_DN_isLoaded;
  float    weight_btagsf_light_UP_;
  TBranch *weight_btagsf_light_UP_branch;
  bool     weight_btagsf_light_UP_isLoaded;
  float    met_pt_;
  TBranch *met_pt_branch;
  bool     met_pt_isLoaded;
  float    met_phi_;
  TBranch *met_phi_branch;
  bool     met_phi_isLoaded;
  float    met_up_pt_;
  TBranch *met_up_pt_branch;
  bool     met_up_pt_isLoaded;
  float    met_up_phi_;
  TBranch *met_up_phi_branch;
  bool     met_up_phi_isLoaded;
  float    met_dn_pt_;
  TBranch *met_dn_pt_branch;
  bool     met_dn_pt_isLoaded;
  float    met_dn_phi_;
  TBranch *met_dn_phi_branch;
  bool     met_dn_phi_isLoaded;
  float    met_gen_pt_;
  TBranch *met_gen_pt_branch;
  bool     met_gen_pt_isLoaded;
  float    met_gen_phi_;
  TBranch *met_gen_phi_branch;
  bool     met_gen_phi_isLoaded;
  float    gen_ht_;
  TBranch *gen_ht_branch;
  bool     gen_ht_isLoaded;
  float    isr_leadjet_dr_;
  TBranch *isr_leadjet_dr_branch;
  bool     isr_leadjet_dr_isLoaded;
  float    higgs_met_dphi_;
  TBranch *higgs_met_dphi_branch;
  bool     higgs_met_dphi_isLoaded;
  float    isr_recoisr_dr_;
  TBranch *isr_recoisr_dr_branch;
  bool     isr_recoisr_dr_isLoaded;
  float    isr_recoisrmegajet_dr_;
  TBranch *isr_recoisrmegajet_dr_branch;
  bool     isr_recoisrmegajet_dr_isLoaded;
  float    lepton_met_dphi_;
  TBranch *lepton_met_dphi_branch;
  bool     lepton_met_dphi_isLoaded;
  float    quark0_met_dphi_;
  TBranch *quark0_met_dphi_branch;
  bool     quark0_met_dphi_isLoaded;
  float    quark1_met_dphi_;
  TBranch *quark1_met_dphi_branch;
  bool     quark1_met_dphi_isLoaded;
  float    wlep_met_dphi_;
  TBranch *wlep_met_dphi_branch;
  bool     wlep_met_dphi_isLoaded;
  float    whad_met_dphi_;
  TBranch *whad_met_dphi_branch;
  bool     whad_met_dphi_isLoaded;
  float    whad_recowhad_dr_;
  TBranch *whad_recowhad_dr_branch;
  bool     whad_recowhad_dr_isLoaded;
  float    whad_recowhad_dphi_;
  TBranch *whad_recowhad_dphi_branch;
  bool     whad_recowhad_dphi_isLoaded;
  float    whad_recowhad_deta_;
  TBranch *whad_recowhad_deta_branch;
  bool     whad_recowhad_deta_isLoaded;
  float    whad_recowhad_ptratio_;
  TBranch *whad_recowhad_ptratio_branch;
  bool     whad_recowhad_ptratio_isLoaded;
  float    higgs_recowhad_dr_;
  TBranch *higgs_recowhad_dr_branch;
  bool     higgs_recowhad_dr_isLoaded;
  float    higgs_recowhad_dphi_;
  TBranch *higgs_recowhad_dphi_branch;
  bool     higgs_recowhad_dphi_isLoaded;
  float    higgs_recowhad_deta_;
  TBranch *higgs_recowhad_deta_branch;
  bool     higgs_recowhad_deta_isLoaded;
  float    higgs_recowhad_ptratio_;
  TBranch *higgs_recowhad_ptratio_branch;
  bool     higgs_recowhad_ptratio_isLoaded;
  float    whad_leadak8_dr_;
  TBranch *whad_leadak8_dr_branch;
  bool     whad_leadak8_dr_isLoaded;
  float    whad_leadak8_dphi_;
  TBranch *whad_leadak8_dphi_branch;
  bool     whad_leadak8_dphi_isLoaded;
  float    whad_leadak8_deta_;
  TBranch *whad_leadak8_deta_branch;
  bool     whad_leadak8_deta_isLoaded;
  float    whad_leadak8_ptratio_;
  TBranch *whad_leadak8_ptratio_branch;
  bool     whad_leadak8_ptratio_isLoaded;
  float    higgs_leadak8_dr_;
  TBranch *higgs_leadak8_dr_branch;
  bool     higgs_leadak8_dr_isLoaded;
  float    higgs_leadak8_dphi_;
  TBranch *higgs_leadak8_dphi_branch;
  bool     higgs_leadak8_dphi_isLoaded;
  float    higgs_leadak8_deta_;
  TBranch *higgs_leadak8_deta_branch;
  bool     higgs_leadak8_deta_isLoaded;
  float    higgs_leadak8_ptratio_;
  TBranch *higgs_leadak8_ptratio_branch;
  bool     higgs_leadak8_ptratio_isLoaded;
  float    lepton_recolep_dr_;
  TBranch *lepton_recolep_dr_branch;
  bool     lepton_recolep_dr_isLoaded;
  float    lepton_recolep_deta_;
  TBranch *lepton_recolep_deta_branch;
  bool     lepton_recolep_deta_isLoaded;
  float    lepton_recolep_dphi_;
  TBranch *lepton_recolep_dphi_branch;
  bool     lepton_recolep_dphi_isLoaded;
  float    lepton_recolep_ptratio_;
  TBranch *lepton_recolep_ptratio_branch;
  bool     lepton_recolep_ptratio_isLoaded;
  float    neutrino_reconeutrino_dr_;
  TBranch *neutrino_reconeutrino_dr_branch;
  bool     neutrino_reconeutrino_dr_isLoaded;
  float    neutrino_reconeutrino_deta_;
  TBranch *neutrino_reconeutrino_deta_branch;
  bool     neutrino_reconeutrino_deta_isLoaded;
  float    neutrino_reconeutrino_dphi_;
  TBranch *neutrino_reconeutrino_dphi_branch;
  bool     neutrino_reconeutrino_dphi_isLoaded;
  float    neutrino_reconeutrino_dpz_;
  TBranch *neutrino_reconeutrino_dpz_branch;
  bool     neutrino_reconeutrino_dpz_isLoaded;
  float    neutrino_reconeutrino_dabspz_;
  TBranch *neutrino_reconeutrino_dabspz_branch;
  bool     neutrino_reconeutrino_dabspz_isLoaded;
  float    neutrino_reconeutrino_ptratio_;
  TBranch *neutrino_reconeutrino_ptratio_branch;
  bool     neutrino_reconeutrino_ptratio_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recohiggs_p4_;
  TBranch *recohiggs_p4_branch;
  bool     recohiggs_p4_isLoaded;
  float    recohiggs_pt_;
  TBranch *recohiggs_pt_branch;
  bool     recohiggs_pt_isLoaded;
  float    recohiggs_eta_;
  TBranch *recohiggs_eta_branch;
  bool     recohiggs_eta_isLoaded;
  float    recohiggs_phi_;
  TBranch *recohiggs_phi_branch;
  bool     recohiggs_phi_isLoaded;
  float    recohiggs_mass_;
  TBranch *recohiggs_mass_branch;
  bool     recohiggs_mass_isLoaded;
  float    recohiggs_mt_;
  TBranch *recohiggs_mt_branch;
  bool     recohiggs_mt_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recohiggs2_p4_;
  TBranch *recohiggs2_p4_branch;
  bool     recohiggs2_p4_isLoaded;
  float    recohiggs2_pt_;
  TBranch *recohiggs2_pt_branch;
  bool     recohiggs2_pt_isLoaded;
  float    recohiggs2_eta_;
  TBranch *recohiggs2_eta_branch;
  bool     recohiggs2_eta_isLoaded;
  float    recohiggs2_phi_;
  TBranch *recohiggs2_phi_branch;
  bool     recohiggs2_phi_isLoaded;
  float    recohiggs2_mass_;
  TBranch *recohiggs2_mass_branch;
  bool     recohiggs2_mass_isLoaded;
  float    recohiggs2_mt_;
  TBranch *recohiggs2_mt_branch;
  bool     recohiggs2_mt_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recohiggsinv_p4_;
  TBranch *recohiggsinv_p4_branch;
  bool     recohiggsinv_p4_isLoaded;
  float    recohiggsinv_pt_;
  TBranch *recohiggsinv_pt_branch;
  bool     recohiggsinv_pt_isLoaded;
  float    recohiggsinv_eta_;
  TBranch *recohiggsinv_eta_branch;
  bool     recohiggsinv_eta_isLoaded;
  float    recohiggsinv_phi_;
  TBranch *recohiggsinv_phi_branch;
  bool     recohiggsinv_phi_isLoaded;
  float    recohiggsinv_mass_;
  TBranch *recohiggsinv_mass_branch;
  bool     recohiggsinv_mass_isLoaded;
  float    recohiggsinv_mt_;
  TBranch *recohiggsinv_mt_branch;
  bool     recohiggsinv_mt_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recohiggsmin_p4_;
  TBranch *recohiggsmin_p4_branch;
  bool     recohiggsmin_p4_isLoaded;
  float    recohiggsmin_pt_;
  TBranch *recohiggsmin_pt_branch;
  bool     recohiggsmin_pt_isLoaded;
  float    recohiggsmin_eta_;
  TBranch *recohiggsmin_eta_branch;
  bool     recohiggsmin_eta_isLoaded;
  float    recohiggsmin_phi_;
  TBranch *recohiggsmin_phi_branch;
  bool     recohiggsmin_phi_isLoaded;
  float    recohiggsmin_mass_;
  TBranch *recohiggsmin_mass_branch;
  bool     recohiggsmin_mass_isLoaded;
  float    recohiggsmin_mt_;
  TBranch *recohiggsmin_mt_branch;
  bool     recohiggsmin_mt_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recohiggsmin12_p4_;
  TBranch *recohiggsmin12_p4_branch;
  bool     recohiggsmin12_p4_isLoaded;
  float    recohiggsmin12_pt_;
  TBranch *recohiggsmin12_pt_branch;
  bool     recohiggsmin12_pt_isLoaded;
  float    recohiggsmin12_eta_;
  TBranch *recohiggsmin12_eta_branch;
  bool     recohiggsmin12_eta_isLoaded;
  float    recohiggsmin12_phi_;
  TBranch *recohiggsmin12_phi_branch;
  bool     recohiggsmin12_phi_isLoaded;
  float    recohiggsmin12_mass_;
  TBranch *recohiggsmin12_mass_branch;
  bool     recohiggsmin12_mass_isLoaded;
  float    recohiggsmin12_mt_;
  TBranch *recohiggsmin12_mt_branch;
  bool     recohiggsmin12_mt_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recoisr_p4_;
  TBranch *recoisr_p4_branch;
  bool     recoisr_p4_isLoaded;
  float    recoisr_pt_;
  TBranch *recoisr_pt_branch;
  bool     recoisr_pt_isLoaded;
  float    recoisr_eta_;
  TBranch *recoisr_eta_branch;
  bool     recoisr_eta_isLoaded;
  float    recoisr_phi_;
  TBranch *recoisr_phi_branch;
  bool     recoisr_phi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recoisrmegajet_p4_;
  TBranch *recoisrmegajet_p4_branch;
  bool     recoisrmegajet_p4_isLoaded;
  float    recoisrmegajet_pt_;
  TBranch *recoisrmegajet_pt_branch;
  bool     recoisrmegajet_pt_isLoaded;
  float    recoisrmegajet_eta_;
  TBranch *recoisrmegajet_eta_branch;
  bool     recoisrmegajet_eta_isLoaded;
  float    recoisrmegajet_phi_;
  TBranch *recoisrmegajet_phi_branch;
  bool     recoisrmegajet_phi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recoisrmegajet_n2_p4_;
  TBranch *recoisrmegajet_n2_p4_branch;
  bool     recoisrmegajet_n2_p4_isLoaded;
  float    recoisrmegajet_n2_pt_;
  TBranch *recoisrmegajet_n2_pt_branch;
  bool     recoisrmegajet_n2_pt_isLoaded;
  float    recoisrmegajet_n2_eta_;
  TBranch *recoisrmegajet_n2_eta_branch;
  bool     recoisrmegajet_n2_eta_isLoaded;
  float    recoisrmegajet_n2_phi_;
  TBranch *recoisrmegajet_n2_phi_branch;
  bool     recoisrmegajet_n2_phi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recolepton_p4_;
  TBranch *recolepton_p4_branch;
  bool     recolepton_p4_isLoaded;
  int      recolepton_id_;
  TBranch *recolepton_id_branch;
  bool     recolepton_id_isLoaded;
  float    recolepton_pt_;
  TBranch *recolepton_pt_branch;
  bool     recolepton_pt_isLoaded;
  float    recolepton_eta_;
  TBranch *recolepton_eta_branch;
  bool     recolepton_eta_isLoaded;
  float    recolepton_phi_;
  TBranch *recolepton_phi_branch;
  bool     recolepton_phi_isLoaded;
  float    recolepton_mt_;
  TBranch *recolepton_mt_branch;
  bool     recolepton_mt_isLoaded;
  float    recolepton_met_dphi_;
  TBranch *recolepton_met_dphi_branch;
  bool     recolepton_met_dphi_isLoaded;
  int      recoiswleplead_;
  TBranch *recoiswleplead_branch;
  bool     recoiswleplead_isLoaded;
  float    reconeutrino_det_;
  TBranch *reconeutrino_det_branch;
  bool     reconeutrino_det_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *reconeutrino_p4_;
  TBranch *reconeutrino_p4_branch;
  bool     reconeutrino_p4_isLoaded;
  float    reconeutrino_pt_;
  TBranch *reconeutrino_pt_branch;
  bool     reconeutrino_pt_isLoaded;
  float    reconeutrino_eta_;
  TBranch *reconeutrino_eta_branch;
  bool     reconeutrino_eta_isLoaded;
  float    reconeutrino_phi_;
  TBranch *reconeutrino_phi_branch;
  bool     reconeutrino_phi_isLoaded;
  float    reconeutrino_met_dphi_;
  TBranch *reconeutrino_met_dphi_branch;
  bool     reconeutrino_met_dphi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *reconeutrino2_p4_;
  TBranch *reconeutrino2_p4_branch;
  bool     reconeutrino2_p4_isLoaded;
  float    reconeutrino2_pt_;
  TBranch *reconeutrino2_pt_branch;
  bool     reconeutrino2_pt_isLoaded;
  float    reconeutrino2_eta_;
  TBranch *reconeutrino2_eta_branch;
  bool     reconeutrino2_eta_isLoaded;
  float    reconeutrino2_phi_;
  TBranch *reconeutrino2_phi_branch;
  bool     reconeutrino2_phi_isLoaded;
  float    reconeutrino2_met_dphi_;
  TBranch *reconeutrino2_met_dphi_branch;
  bool     reconeutrino2_met_dphi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *reconeutrinoinv_p4_;
  TBranch *reconeutrinoinv_p4_branch;
  bool     reconeutrinoinv_p4_isLoaded;
  float    reconeutrinoinv_pt_;
  TBranch *reconeutrinoinv_pt_branch;
  bool     reconeutrinoinv_pt_isLoaded;
  float    reconeutrinoinv_eta_;
  TBranch *reconeutrinoinv_eta_branch;
  bool     reconeutrinoinv_eta_isLoaded;
  float    reconeutrinoinv_phi_;
  TBranch *reconeutrinoinv_phi_branch;
  bool     reconeutrinoinv_phi_isLoaded;
  float    reconeutrinoinv_met_dphi_;
  TBranch *reconeutrinoinv_met_dphi_branch;
  bool     reconeutrinoinv_met_dphi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recowhad_p4_;
  TBranch *recowhad_p4_branch;
  bool     recowhad_p4_isLoaded;
  float    recowhad_pt_;
  TBranch *recowhad_pt_branch;
  bool     recowhad_pt_isLoaded;
  float    recowhad_eta_;
  TBranch *recowhad_eta_branch;
  bool     recowhad_eta_isLoaded;
  float    recowhad_phi_;
  TBranch *recowhad_phi_branch;
  bool     recowhad_phi_isLoaded;
  float    recowhad_mass_;
  TBranch *recowhad_mass_branch;
  bool     recowhad_mass_isLoaded;
  float    recowhad_softdropMass_;
  TBranch *recowhad_softdropMass_branch;
  bool     recowhad_softdropMass_isLoaded;
  float    recowhad_prunedMass_;
  TBranch *recowhad_prunedMass_branch;
  bool     recowhad_prunedMass_isLoaded;
  float    recowhad_nJettinessTau1_;
  TBranch *recowhad_nJettinessTau1_branch;
  bool     recowhad_nJettinessTau1_isLoaded;
  float    recowhad_nJettinessTau2_;
  TBranch *recowhad_nJettinessTau2_branch;
  bool     recowhad_nJettinessTau2_isLoaded;
  float    recowhad_puppi_softdropMass_;
  TBranch *recowhad_puppi_softdropMass_branch;
  bool     recowhad_puppi_softdropMass_isLoaded;
  float    recowhad_puppi_pt_;
  TBranch *recowhad_puppi_pt_branch;
  bool     recowhad_puppi_pt_isLoaded;
  float    recowhad_puppi_eta_;
  TBranch *recowhad_puppi_eta_branch;
  bool     recowhad_puppi_eta_isLoaded;
  float    recowhad_puppi_phi_;
  TBranch *recowhad_puppi_phi_branch;
  bool     recowhad_puppi_phi_isLoaded;
  float    recowhad_puppi_mass_;
  TBranch *recowhad_puppi_mass_branch;
  bool     recowhad_puppi_mass_isLoaded;
  float    recowhad_puppi_nJettinessTau1_;
  TBranch *recowhad_puppi_nJettinessTau1_branch;
  bool     recowhad_puppi_nJettinessTau1_isLoaded;
  float    recowhad_puppi_nJettinessTau2_;
  TBranch *recowhad_puppi_nJettinessTau2_branch;
  bool     recowhad_puppi_nJettinessTau2_isLoaded;
  float    recowhad_softdropPuppiSubjet1_;
  TBranch *recowhad_softdropPuppiSubjet1_branch;
  bool     recowhad_softdropPuppiSubjet1_isLoaded;
  float    recowhad_softdropPuppiSubjet2_;
  TBranch *recowhad_softdropPuppiSubjet2_branch;
  bool     recowhad_softdropPuppiSubjet2_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recowlep_p4_;
  TBranch *recowlep_p4_branch;
  bool     recowlep_p4_isLoaded;
  float    recowlep_pt_;
  TBranch *recowlep_pt_branch;
  bool     recowlep_pt_isLoaded;
  float    recowlep_eta_;
  TBranch *recowlep_eta_branch;
  bool     recowlep_eta_isLoaded;
  float    recowlep_phi_;
  TBranch *recowlep_phi_branch;
  bool     recowlep_phi_isLoaded;
  float    recowlep_mass_;
  TBranch *recowlep_mass_branch;
  bool     recowlep_mass_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recoleadjet_p4_;
  TBranch *recoleadjet_p4_branch;
  bool     recoleadjet_p4_isLoaded;
  float    recoleadjet_pt_;
  TBranch *recoleadjet_pt_branch;
  bool     recoleadjet_pt_isLoaded;
  float    recoleadjet_eta_;
  TBranch *recoleadjet_eta_branch;
  bool     recoleadjet_eta_isLoaded;
  float    recoleadjet_phi_;
  TBranch *recoleadjet_phi_branch;
  bool     recoleadjet_phi_isLoaded;
  float    recolepton_recowhad_dr_;
  TBranch *recolepton_recowhad_dr_branch;
  bool     recolepton_recowhad_dr_isLoaded;
  float    recoleadjet_recolepton_dr_;
  TBranch *recoleadjet_recolepton_dr_branch;
  bool     recoleadjet_recolepton_dr_isLoaded;
  float    recoleadjet_met_dphi_;
  TBranch *recoleadjet_met_dphi_branch;
  bool     recoleadjet_met_dphi_isLoaded;
  float    recoleadjet_recowhad_dr_;
  TBranch *recoleadjet_recowhad_dr_branch;
  bool     recoleadjet_recowhad_dr_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recowhad_minus_recolepton_p4_;
  TBranch *recowhad_minus_recolepton_p4_branch;
  bool     recowhad_minus_recolepton_p4_isLoaded;
  float    recowhad_minus_recolepton_pt_;
  TBranch *recowhad_minus_recolepton_pt_branch;
  bool     recowhad_minus_recolepton_pt_isLoaded;
  float    recowhad_minus_recolepton_eta_;
  TBranch *recowhad_minus_recolepton_eta_branch;
  bool     recowhad_minus_recolepton_eta_isLoaded;
  float    recowhad_minus_recolepton_phi_;
  TBranch *recowhad_minus_recolepton_phi_branch;
  bool     recowhad_minus_recolepton_phi_isLoaded;
  float    recowhad_minus_recolepton_mass_;
  TBranch *recowhad_minus_recolepton_mass_branch;
  bool     recowhad_minus_recolepton_mass_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *recowhad_minus_recolepton_positive_p4_;
  TBranch *recowhad_minus_recolepton_positive_p4_branch;
  bool     recowhad_minus_recolepton_positive_p4_isLoaded;
  float    recowhad_minus_recolepton_positive_pt_;
  TBranch *recowhad_minus_recolepton_positive_pt_branch;
  bool     recowhad_minus_recolepton_positive_pt_isLoaded;
  float    recowhad_minus_recolepton_positive_eta_;
  TBranch *recowhad_minus_recolepton_positive_eta_branch;
  bool     recowhad_minus_recolepton_positive_eta_isLoaded;
  float    recowhad_minus_recolepton_positive_phi_;
  TBranch *recowhad_minus_recolepton_positive_phi_branch;
  bool     recowhad_minus_recolepton_positive_phi_isLoaded;
  float    recowhad_minus_recolepton_positive_mass_;
  TBranch *recowhad_minus_recolepton_positive_mass_branch;
  bool     recowhad_minus_recolepton_positive_mass_isLoaded;
  int      higgsdecay_;
  TBranch *higgsdecay_branch;
  bool     higgsdecay_isLoaded;
  int      wstar_channel_id_;
  TBranch *wstar_channel_id_branch;
  bool     wstar_channel_id_isLoaded;
  int      nlep_;
  TBranch *nlep_branch;
  bool     nlep_isLoaded;
  int      nquark_;
  TBranch *nquark_branch;
  bool     nquark_isLoaded;
  int      wa_id_;
  TBranch *wa_id_branch;
  bool     wa_id_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *isr_p4_;
  TBranch *isr_p4_branch;
  bool     isr_p4_isLoaded;
  float    isr_pt_;
  TBranch *isr_pt_branch;
  bool     isr_pt_isLoaded;
  float    isr_eta_;
  TBranch *isr_eta_branch;
  bool     isr_eta_isLoaded;
  float    isr_phi_;
  TBranch *isr_phi_branch;
  bool     isr_phi_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *higgs_p4_;
  TBranch *higgs_p4_branch;
  bool     higgs_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *decay_p4_;
  TBranch *decay_p4_branch;
  bool     decay_p4_isLoaded;
  vector<int> *decay_id_;
  TBranch *decay_id_branch;
  bool     decay_id_isLoaded;
  vector<int> *decay_isstar_;
  TBranch *decay_isstar_branch;
  bool     decay_isstar_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *lepton_p4_;
  TBranch *lepton_p4_branch;
  bool     lepton_p4_isLoaded;
  vector<int> *lepton_id_;
  TBranch *lepton_id_branch;
  bool     lepton_id_isLoaded;
  vector<int> *lepton_isstar_;
  TBranch *lepton_isstar_branch;
  bool     lepton_isstar_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *neutrino_p4_;
  TBranch *neutrino_p4_branch;
  bool     neutrino_p4_isLoaded;
  vector<int> *neutrino_id_;
  TBranch *neutrino_id_branch;
  bool     neutrino_id_isLoaded;
  vector<int> *neutrino_isstar_;
  TBranch *neutrino_isstar_branch;
  bool     neutrino_isstar_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *quark_p4_;
  TBranch *quark_p4_branch;
  bool     quark_p4_isLoaded;
  vector<int> *quark_id_;
  TBranch *quark_id_branch;
  bool     quark_id_isLoaded;
  vector<int> *quark_isstar_;
  TBranch *quark_isstar_branch;
  bool     quark_isstar_isLoaded;
  float    lqq_max_dr_;
  TBranch *lqq_max_dr_branch;
  bool     lqq_max_dr_isLoaded;
  float    lq0_dr_;
  TBranch *lq0_dr_branch;
  bool     lq0_dr_isLoaded;
  float    lq1_dr_;
  TBranch *lq1_dr_branch;
  bool     lq1_dr_isLoaded;
  float    qq_dr_;
  TBranch *qq_dr_branch;
  bool     qq_dr_isLoaded;
  float    decay_dr_;
  TBranch *decay_dr_branch;
  bool     decay_dr_isLoaded;
  float    l_qq_dr_;
  TBranch *l_qq_dr_branch;
  bool     l_qq_dr_isLoaded;
  float    lqq_mass_;
  TBranch *lqq_mass_branch;
  bool     lqq_mass_isLoaded;
  float    lvqq_mt_;
  TBranch *lvqq_mt_branch;
  bool     lvqq_mt_isLoaded;
  float    inneriso_;
  TBranch *inneriso_branch;
  bool     inneriso_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *pf_p4s_;
  TBranch *pf_p4s_branch;
  bool     pf_p4s_isLoaded;
  vector<float> *pf_drs_;
  TBranch *pf_drs_branch;
  bool     pf_drs_isLoaded;
  float    sumpt_oppo_r15_;
  TBranch *sumpt_oppo_r15_branch;
  bool     sumpt_oppo_r15_isLoaded;
  int      njet5_oppo_r15_;
  TBranch *njet5_oppo_r15_branch;
  bool     njet5_oppo_r15_isLoaded;
  int      njet10_oppo_r15_;
  TBranch *njet10_oppo_r15_branch;
  bool     njet10_oppo_r15_isLoaded;
  int      njet20_oppo_r15_;
  TBranch *njet20_oppo_r15_branch;
  bool     njet20_oppo_r15_isLoaded;
  int      njet30_oppo_r15_;
  TBranch *njet30_oppo_r15_branch;
  bool     njet30_oppo_r15_isLoaded;
  int      njet50_oppo_r15_;
  TBranch *njet50_oppo_r15_branch;
  bool     njet50_oppo_r15_isLoaded;
  float    sumpt_oppo_;
  TBranch *sumpt_oppo_branch;
  bool     sumpt_oppo_isLoaded;
  int      njet5_oppo_;
  TBranch *njet5_oppo_branch;
  bool     njet5_oppo_isLoaded;
  int      njet10_oppo_;
  TBranch *njet10_oppo_branch;
  bool     njet10_oppo_isLoaded;
  int      njet20_oppo_;
  TBranch *njet20_oppo_branch;
  bool     njet20_oppo_isLoaded;
  int      njet30_oppo_;
  TBranch *njet30_oppo_branch;
  bool     njet30_oppo_isLoaded;
  int      njet50_oppo_;
  TBranch *njet50_oppo_branch;
  bool     njet50_oppo_isLoaded;
  float    sumpt_in_fatjet_;
  TBranch *sumpt_in_fatjet_branch;
  bool     sumpt_in_fatjet_isLoaded;
  int      njet5_in_fatjet_;
  TBranch *njet5_in_fatjet_branch;
  bool     njet5_in_fatjet_isLoaded;
  float    lepton_eta_;
  TBranch *lepton_eta_branch;
  bool     lepton_eta_isLoaded;
  float    lepton_phi_;
  TBranch *lepton_phi_branch;
  bool     lepton_phi_isLoaded;
  float    lepton_pt_;
  TBranch *lepton_pt_branch;
  bool     lepton_pt_isLoaded;
  float    lepton_relIso03EA_;
  TBranch *lepton_relIso03EA_branch;
  bool     lepton_relIso03EA_isLoaded;
  float    lepton_relIso04DB_;
  TBranch *lepton_relIso04DB_branch;
  bool     lepton_relIso04DB_isLoaded;
  float    lepton_miniIsoEA_;
  TBranch *lepton_miniIsoEA_branch;
  bool     lepton_miniIsoEA_isLoaded;
  float    lepton_chiso_;
  TBranch *lepton_chiso_branch;
  bool     lepton_chiso_isLoaded;
  float    lepton_nhiso_;
  TBranch *lepton_nhiso_branch;
  bool     lepton_nhiso_isLoaded;
  float    lepton_emiso_;
  TBranch *lepton_emiso_branch;
  bool     lepton_emiso_isLoaded;
  float    lepton_ncorriso_;
  TBranch *lepton_ncorriso_branch;
  bool     lepton_ncorriso_isLoaded;
  int      lepton_nChargedPf_;
  TBranch *lepton_nChargedPf_branch;
  bool     lepton_nChargedPf_isLoaded;
  int      lepton_nPhotonPf_;
  TBranch *lepton_nPhotonPf_branch;
  bool     lepton_nPhotonPf_isLoaded;
  int      lepton_nNeutralHadPf_;
  TBranch *lepton_nNeutralHadPf_branch;
  bool     lepton_nNeutralHadPf_isLoaded;
  int      lepton_isFromW_;
  TBranch *lepton_isFromW_branch;
  bool     lepton_isFromW_isLoaded;
  int      lepton_flavor_;
  TBranch *lepton_flavor_branch;
  bool     lepton_flavor_isLoaded;
  int      nvtx_;
  TBranch *nvtx_branch;
  bool     nvtx_isLoaded;
  vector<float> *pf_annuli_energy_;
  TBranch *pf_annuli_energy_branch;
  bool     pf_annuli_energy_isLoaded;
  vector<float> *pf_pt_;
  TBranch *pf_pt_branch;
  bool     pf_pt_isLoaded;
  vector<int> *pf_id_;
  TBranch *pf_id_branch;
  bool     pf_id_isLoaded;
  vector<float> *pf_reta_;
  TBranch *pf_reta_branch;
  bool     pf_reta_isLoaded;
  vector<float> *pf_rphi_;
  TBranch *pf_rphi_branch;
  bool     pf_rphi_isLoaded;
  int      HLT_Ele27_WPLoose_Gsf_;
  TBranch *HLT_Ele27_WPLoose_Gsf_branch;
  bool     HLT_Ele27_WPLoose_Gsf_isLoaded;
  int      HLT_Ele30_WPLoose_Gsf_;
  TBranch *HLT_Ele30_WPLoose_Gsf_branch;
  bool     HLT_Ele30_WPLoose_Gsf_isLoaded;
  int      HLT_Ele45_WPLoose_Gsf_;
  TBranch *HLT_Ele45_WPLoose_Gsf_branch;
  bool     HLT_Ele45_WPLoose_Gsf_isLoaded;
  int      HLT_Ele105_CaloIdVT_GsfTrkIdT_;
  TBranch *HLT_Ele105_CaloIdVT_GsfTrkIdT_branch;
  bool     HLT_Ele105_CaloIdVT_GsfTrkIdT_isLoaded;
  int      HLT_Ele115_CaloIdVT_GsfTrkIdT_;
  TBranch *HLT_Ele115_CaloIdVT_GsfTrkIdT_branch;
  bool     HLT_Ele115_CaloIdVT_GsfTrkIdT_isLoaded;
  int      HLT_IsoTkMu24_;
  TBranch *HLT_IsoTkMu24_branch;
  bool     HLT_IsoTkMu24_isLoaded;
  int      HLT_IsoMu24_;
  TBranch *HLT_IsoMu24_branch;
  bool     HLT_IsoMu24_isLoaded;
  int      HLT_SingleMu50_;
  TBranch *HLT_SingleMu50_branch;
  bool     HLT_SingleMu50_isLoaded;
  int      HLT_SingleEl40_;
  TBranch *HLT_SingleEl40_branch;
  bool     HLT_SingleEl40_isLoaded;
  int      HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_;
  TBranch *HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_branch;
  bool     HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_isLoaded;
  int      HLT_Mu50_;
  TBranch *HLT_Mu50_branch;
  bool     HLT_Mu50_isLoaded;
  int      HLT_TkMu50_;
  TBranch *HLT_TkMu50_branch;
  bool     HLT_TkMu50_isLoaded;
  int      HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_;
  TBranch *HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_branch;
  bool     HLT_AK8PFHT700_TrimR0p1PT0p03Mass50_isLoaded;
  int      HLT_AK8PFJet360_TrimMass30_;
  TBranch *HLT_AK8PFJet360_TrimMass30_branch;
  bool     HLT_AK8PFJet360_TrimMass30_isLoaded;
  int      HLT_PFHT800_;
  TBranch *HLT_PFHT800_branch;
  bool     HLT_PFHT800_isLoaded;
  int      HLT_PFHT900_;
  TBranch *HLT_PFHT900_branch;
  bool     HLT_PFHT900_isLoaded;
  int      HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_;
  TBranch *HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_branch;
  bool     HLT_PFHT650_WideJetMJJ900DEtaJJ1p5_isLoaded;
  int      HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_;
  TBranch *HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_branch;
  bool     HLT_PFHT650_WideJetMJJ950DEtaJJ1p5_isLoaded;
  int      HLT_AK8PFDiJet280_200_TrimMass30_CSVM_0p20_;
  TBranch *HLT_AK8PFDiJet280_200_TrimMass30_CSVM_0p20_branch;
  bool     HLT_AK8PFDiJet280_200_TrimMass30_CSVM_0p20_isLoaded;
  int      pass_duplicate_se_sm_;
  TBranch *pass_duplicate_se_sm_branch;
  bool     pass_duplicate_se_sm_isLoaded;
  int      pass_duplicate_sm_se_;
  TBranch *pass_duplicate_sm_se_branch;
  bool     pass_duplicate_sm_se_isLoaded;
  int      nbOR_;
  TBranch *nbOR_branch;
  bool     nbOR_isLoaded;
  int      nbORmed_;
  TBranch *nbORmed_branch;
  bool     nbORmed_isLoaded;
  int      nbORtight_;
  TBranch *nbORtight_branch;
  bool     nbORtight_isLoaded;
  int      nbOR30_;
  TBranch *nbOR30_branch;
  bool     nbOR30_isLoaded;
  int      nbOR30med_;
  TBranch *nbOR30med_branch;
  bool     nbOR30med_isLoaded;
  int      nbOR30tight_;
  TBranch *nbOR30tight_branch;
  bool     nbOR30tight_isLoaded;
  int      nbOR40_;
  TBranch *nbOR40_branch;
  bool     nbOR40_isLoaded;
  int      nbOR40med_;
  TBranch *nbOR40med_branch;
  bool     nbOR40med_isLoaded;
  int      nbOR40tight_;
  TBranch *nbOR40tight_branch;
  bool     nbOR40tight_isLoaded;
  int      nbOR50_;
  TBranch *nbOR50_branch;
  bool     nbOR50_isLoaded;
  int      nbOR50med_;
  TBranch *nbOR50med_branch;
  bool     nbOR50med_isLoaded;
  int      nbOR50tight_;
  TBranch *nbOR50tight_branch;
  bool     nbOR50tight_isLoaded;
  float    htOR_;
  TBranch *htOR_branch;
  bool     htOR_isLoaded;
  float    htOR40_;
  TBranch *htOR40_branch;
  bool     htOR40_isLoaded;
  float    htOR50_;
  TBranch *htOR50_branch;
  bool     htOR50_isLoaded;
  float    mhOR_;
  TBranch *mhOR_branch;
  bool     mhOR_isLoaded;
  float    mhOR40_;
  TBranch *mhOR40_branch;
  bool     mhOR40_isLoaded;
  float    mhOR50_;
  TBranch *mhOR50_branch;
  bool     mhOR50_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const int &run();
  const int &lumi();
  const unsigned long long &evt();
  const int &isData();
  const float &evt_scale1fb();
  const float &genps_weight();
  const float &xsec_br();
  const int &evt_passgoodrunlist();
  const TString &CMS4path();
  const int &CMS4index();
  const float &weight_fr_r1_f1();
  const float &weight_fr_r1_f2();
  const float &weight_fr_r1_f0p5();
  const float &weight_fr_r2_f1();
  const float &weight_fr_r2_f2();
  const float &weight_fr_r2_f0p5();
  const float &weight_fr_r0p5_f1();
  const float &weight_fr_r0p5_f2();
  const float &weight_fr_r0p5_f0p5();
  const float &weight_pdf_up();
  const float &weight_pdf_down();
  const float &weight_alphas_down();
  const float &weight_alphas_up();
  const float &weight_isr();
  const float &weight_isr_up();
  const float &weight_isr_down();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &lep_p4();
  const vector<int> &lep_id();
  const vector<int> &lep_idx();
  const vector<float> &lep_pt();
  const vector<float> &lep_eta();
  const vector<float> &lep_phi();
  const vector<float> &lep_miniIsoEA();
  const vector<float> &lep_relIso03EA();
  const vector<float> &lep_relIso04DB();
  const vector<float> &lep_customrelIso005EA();
  const vector<float> &lep_customrelIso01EA();
  const vector<float> &lep_customrelIso015EA();
  const vector<float> &lep_customrelIso02EA();
  const vector<float> &lep_customrelIso025EA();
  const vector<float> &lep_customrelIso03EA();
  const vector<float> &lep_customrelIso035EA();
  const vector<float> &lep_customrelIso04EA();
  const vector<float> &lep_customrelIso045EA();
  const vector<float> &lep_customrelIso05EA();
  const vector<float> &lep_customrelIso055EA();
  const vector<float> &lep_customrelIso06EA();
  const vector<float> &lep_customrelIso065EA();
  const vector<float> &lep_customrelIso07EA();
  const vector<float> &lep_customrelIso075EA();
  const vector<float> &lep_customrelIso08EA();
  const int &nrecolep();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep_p4_2();
  const float &lep_pt_0();
  const float &lep_pt_1();
  const float &lep_pt_2();
  const float &lep_eta_0();
  const float &lep_eta_1();
  const float &lep_eta_2();
  const float &lep_phi_0();
  const float &lep_phi_1();
  const float &lep_phi_2();
  const float &lep_miniIsoEA_0();
  const float &lep_miniIsoEA_1();
  const float &lep_miniIsoEA_2();
  const float &lep_relIso03EA_0();
  const float &lep_relIso03EA_1();
  const float &lep_relIso03EA_2();
  const float &lep_relIso04DB_0();
  const float &lep_relIso04DB_1();
  const float &lep_relIso04DB_2();
  const int &lep_id_0();
  const int &lep_id_1();
  const int &lep_id_2();
  const int &lep_idx_0();
  const int &lep_idx_1();
  const int &lep_idx_2();
  const int &nj();
  const int &nb();
  const int &nbmed();
  const int &nbtight();
  const int &nj50();
  const int &nb50();
  const int &nb50med();
  const int &nb50tight();
  const int &nb30();
  const int &nb30med();
  const int &nb30tight();
  const int &nb40();
  const int &nb40med();
  const int &nb40tight();
  const float &ht();
  const float &ht40();
  const float &ht50();
  const float &mh();
  const float &mh40();
  const float &mh50();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &alljets_p4();
  const vector<float> &alljets_pt();
  const vector<float> &alljets_eta();
  const vector<float> &alljets_phi();
  const vector<float> &alljets_csv();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_p4();
  const vector<float> &jets_pt();
  const vector<float> &jets_eta();
  const vector<float> &jets_phi();
  const vector<float> &jets_csv();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_up_p4();
  const vector<float> &jets_up_pt();
  const vector<float> &jets_up_eta();
  const vector<float> &jets_up_phi();
  const vector<float> &jets_up_csv();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_dn_p4();
  const vector<float> &jets_dn_pt();
  const vector<float> &jets_dn_eta();
  const vector<float> &jets_dn_phi();
  const vector<float> &jets_dn_csv();
  const int &nak8jets();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak8jets_p4();
  const vector<float> &ak8jets_pt();
  const vector<float> &ak8jets_eta();
  const vector<float> &ak8jets_phi();
  const vector<float> &ak8jets_softdropMass();
  const vector<float> &ak8jets_prunedMass();
  const vector<float> &ak8jets_trimmedMass();
  const vector<float> &ak8jets_mass();
  const vector<float> &ak8jets_nJettinessTau1();
  const vector<float> &ak8jets_nJettinessTau2();
  const vector<float> &ak8jets_softdropPuppiSubjet1();
  const vector<float> &ak8jets_softdropPuppiSubjet2();
  const vector<float> &ak8jets_puppi_softdropMass();
  const vector<float> &ak8jets_puppi_nJettinessTau1();
  const vector<float> &ak8jets_puppi_nJettinessTau2();
  const vector<float> &ak8jets_puppi_eta();
  const vector<float> &ak8jets_puppi_phi();
  const vector<float> &ak8jets_puppi_pt();
  const vector<float> &ak8jets_puppi_mass();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_p4_2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_up_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_up_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_up_p4_2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_dn_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_dn_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_dn_p4_2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak8jets_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak8jets_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak8jets_p4_2();
  const float &jets_pt_0();
  const float &jets_pt_1();
  const float &jets_pt_2();
  const float &jets_eta_0();
  const float &jets_eta_1();
  const float &jets_eta_2();
  const float &jets_phi_0();
  const float &jets_phi_1();
  const float &jets_phi_2();
  const float &jets_csv_0();
  const float &jets_csv_1();
  const float &jets_csv_2();
  const float &jets_up_pt_0();
  const float &jets_up_pt_1();
  const float &jets_up_pt_2();
  const float &jets_up_eta_0();
  const float &jets_up_eta_1();
  const float &jets_up_eta_2();
  const float &jets_up_phi_0();
  const float &jets_up_phi_1();
  const float &jets_up_phi_2();
  const float &jets_up_csv_0();
  const float &jets_up_csv_1();
  const float &jets_up_csv_2();
  const float &jets_dn_pt_0();
  const float &jets_dn_pt_1();
  const float &jets_dn_pt_2();
  const float &jets_dn_eta_0();
  const float &jets_dn_eta_1();
  const float &jets_dn_eta_2();
  const float &jets_dn_phi_0();
  const float &jets_dn_phi_1();
  const float &jets_dn_phi_2();
  const float &jets_dn_csv_0();
  const float &jets_dn_csv_1();
  const float &jets_dn_csv_2();
  const float &ak8jets_pt_0();
  const float &ak8jets_pt_1();
  const float &ak8jets_pt_2();
  const float &ak8jets_eta_0();
  const float &ak8jets_eta_1();
  const float &ak8jets_eta_2();
  const float &ak8jets_phi_0();
  const float &ak8jets_phi_1();
  const float &ak8jets_phi_2();
  const float &ak8jets_softdropMass_0();
  const float &ak8jets_softdropMass_1();
  const float &ak8jets_softdropMass_2();
  const float &ak8jets_prunedMass_0();
  const float &ak8jets_prunedMass_1();
  const float &ak8jets_prunedMass_2();
  const float &ak8jets_trimmedMass_0();
  const float &ak8jets_trimmedMass_1();
  const float &ak8jets_trimmedMass_2();
  const float &ak8jets_mass_0();
  const float &ak8jets_mass_1();
  const float &ak8jets_mass_2();
  const float &ak8jets_nJettinessTau1_0();
  const float &ak8jets_nJettinessTau1_1();
  const float &ak8jets_nJettinessTau1_2();
  const float &ak8jets_nJettinessTau2_0();
  const float &ak8jets_nJettinessTau2_1();
  const float &ak8jets_nJettinessTau2_2();
  const float &ak8jets_softdropPuppiSubjet1_0();
  const float &ak8jets_softdropPuppiSubjet1_1();
  const float &ak8jets_softdropPuppiSubjet1_2();
  const float &ak8jets_softdropPuppiSubjet2_0();
  const float &ak8jets_softdropPuppiSubjet2_1();
  const float &ak8jets_softdropPuppiSubjet2_2();
  const float &ak8jets_puppi_softdropMass_0();
  const float &ak8jets_puppi_softdropMass_1();
  const float &ak8jets_puppi_softdropMass_2();
  const float &ak8jets_puppi_nJettinessTau1_0();
  const float &ak8jets_puppi_nJettinessTau1_1();
  const float &ak8jets_puppi_nJettinessTau1_2();
  const float &ak8jets_puppi_nJettinessTau2_0();
  const float &ak8jets_puppi_nJettinessTau2_1();
  const float &ak8jets_puppi_nJettinessTau2_2();
  const float &ak8jets_puppi_eta_0();
  const float &ak8jets_puppi_eta_1();
  const float &ak8jets_puppi_eta_2();
  const float &ak8jets_puppi_phi_0();
  const float &ak8jets_puppi_phi_1();
  const float &ak8jets_puppi_phi_2();
  const float &ak8jets_puppi_pt_0();
  const float &ak8jets_puppi_pt_1();
  const float &ak8jets_puppi_pt_2();
  const float &ak8jets_puppi_mass_0();
  const float &ak8jets_puppi_mass_1();
  const float &ak8jets_puppi_mass_2();
  const float &weight_btagsf();
  const float &weight_btagsf_heavy_DN();
  const float &weight_btagsf_heavy_UP();
  const float &weight_btagsf_light_DN();
  const float &weight_btagsf_light_UP();
  const float &met_pt();
  const float &met_phi();
  const float &met_up_pt();
  const float &met_up_phi();
  const float &met_dn_pt();
  const float &met_dn_phi();
  const float &met_gen_pt();
  const float &met_gen_phi();
  const float &gen_ht();
  const float &isr_leadjet_dr();
  const float &higgs_met_dphi();
  const float &isr_recoisr_dr();
  const float &isr_recoisrmegajet_dr();
  const float &lepton_met_dphi();
  const float &quark0_met_dphi();
  const float &quark1_met_dphi();
  const float &wlep_met_dphi();
  const float &whad_met_dphi();
  const float &whad_recowhad_dr();
  const float &whad_recowhad_dphi();
  const float &whad_recowhad_deta();
  const float &whad_recowhad_ptratio();
  const float &higgs_recowhad_dr();
  const float &higgs_recowhad_dphi();
  const float &higgs_recowhad_deta();
  const float &higgs_recowhad_ptratio();
  const float &whad_leadak8_dr();
  const float &whad_leadak8_dphi();
  const float &whad_leadak8_deta();
  const float &whad_leadak8_ptratio();
  const float &higgs_leadak8_dr();
  const float &higgs_leadak8_dphi();
  const float &higgs_leadak8_deta();
  const float &higgs_leadak8_ptratio();
  const float &lepton_recolep_dr();
  const float &lepton_recolep_deta();
  const float &lepton_recolep_dphi();
  const float &lepton_recolep_ptratio();
  const float &neutrino_reconeutrino_dr();
  const float &neutrino_reconeutrino_deta();
  const float &neutrino_reconeutrino_dphi();
  const float &neutrino_reconeutrino_dpz();
  const float &neutrino_reconeutrino_dabspz();
  const float &neutrino_reconeutrino_ptratio();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggs_p4();
  const float &recohiggs_pt();
  const float &recohiggs_eta();
  const float &recohiggs_phi();
  const float &recohiggs_mass();
  const float &recohiggs_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggs2_p4();
  const float &recohiggs2_pt();
  const float &recohiggs2_eta();
  const float &recohiggs2_phi();
  const float &recohiggs2_mass();
  const float &recohiggs2_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggsinv_p4();
  const float &recohiggsinv_pt();
  const float &recohiggsinv_eta();
  const float &recohiggsinv_phi();
  const float &recohiggsinv_mass();
  const float &recohiggsinv_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggsmin_p4();
  const float &recohiggsmin_pt();
  const float &recohiggsmin_eta();
  const float &recohiggsmin_phi();
  const float &recohiggsmin_mass();
  const float &recohiggsmin_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggsmin12_p4();
  const float &recohiggsmin12_pt();
  const float &recohiggsmin12_eta();
  const float &recohiggsmin12_phi();
  const float &recohiggsmin12_mass();
  const float &recohiggsmin12_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoisr_p4();
  const float &recoisr_pt();
  const float &recoisr_eta();
  const float &recoisr_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoisrmegajet_p4();
  const float &recoisrmegajet_pt();
  const float &recoisrmegajet_eta();
  const float &recoisrmegajet_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoisrmegajet_n2_p4();
  const float &recoisrmegajet_n2_pt();
  const float &recoisrmegajet_n2_eta();
  const float &recoisrmegajet_n2_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recolepton_p4();
  const int &recolepton_id();
  const float &recolepton_pt();
  const float &recolepton_eta();
  const float &recolepton_phi();
  const float &recolepton_mt();
  const float &recolepton_met_dphi();
  const int &recoiswleplead();
  const float &reconeutrino_det();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &reconeutrino_p4();
  const float &reconeutrino_pt();
  const float &reconeutrino_eta();
  const float &reconeutrino_phi();
  const float &reconeutrino_met_dphi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &reconeutrino2_p4();
  const float &reconeutrino2_pt();
  const float &reconeutrino2_eta();
  const float &reconeutrino2_phi();
  const float &reconeutrino2_met_dphi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &reconeutrinoinv_p4();
  const float &reconeutrinoinv_pt();
  const float &reconeutrinoinv_eta();
  const float &reconeutrinoinv_phi();
  const float &reconeutrinoinv_met_dphi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowhad_p4();
  const float &recowhad_pt();
  const float &recowhad_eta();
  const float &recowhad_phi();
  const float &recowhad_mass();
  const float &recowhad_softdropMass();
  const float &recowhad_prunedMass();
  const float &recowhad_nJettinessTau1();
  const float &recowhad_nJettinessTau2();
  const float &recowhad_puppi_softdropMass();
  const float &recowhad_puppi_pt();
  const float &recowhad_puppi_eta();
  const float &recowhad_puppi_phi();
  const float &recowhad_puppi_mass();
  const float &recowhad_puppi_nJettinessTau1();
  const float &recowhad_puppi_nJettinessTau2();
  const float &recowhad_softdropPuppiSubjet1();
  const float &recowhad_softdropPuppiSubjet2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowlep_p4();
  const float &recowlep_pt();
  const float &recowlep_eta();
  const float &recowlep_phi();
  const float &recowlep_mass();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoleadjet_p4();
  const float &recoleadjet_pt();
  const float &recoleadjet_eta();
  const float &recoleadjet_phi();
  const float &recolepton_recowhad_dr();
  const float &recoleadjet_recolepton_dr();
  const float &recoleadjet_met_dphi();
  const float &recoleadjet_recowhad_dr();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowhad_minus_recolepton_p4();
  const float &recowhad_minus_recolepton_pt();
  const float &recowhad_minus_recolepton_eta();
  const float &recowhad_minus_recolepton_phi();
  const float &recowhad_minus_recolepton_mass();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowhad_minus_recolepton_positive_p4();
  const float &recowhad_minus_recolepton_positive_pt();
  const float &recowhad_minus_recolepton_positive_eta();
  const float &recowhad_minus_recolepton_positive_phi();
  const float &recowhad_minus_recolepton_positive_mass();
  const int &higgsdecay();
  const int &wstar_channel_id();
  const int &nlep();
  const int &nquark();
  const int &wa_id();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &isr_p4();
  const float &isr_pt();
  const float &isr_eta();
  const float &isr_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &higgs_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &decay_p4();
  const vector<int> &decay_id();
  const vector<int> &decay_isstar();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &lepton_p4();
  const vector<int> &lepton_id();
  const vector<int> &lepton_isstar();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &neutrino_p4();
  const vector<int> &neutrino_id();
  const vector<int> &neutrino_isstar();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &quark_p4();
  const vector<int> &quark_id();
  const vector<int> &quark_isstar();
  const float &lqq_max_dr();
  const float &lq0_dr();
  const float &lq1_dr();
  const float &qq_dr();
  const float &decay_dr();
  const float &l_qq_dr();
  const float &lqq_mass();
  const float &lvqq_mt();
  const float &inneriso();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &pf_p4s();
  const vector<float> &pf_drs();
  const float &sumpt_oppo_r15();
  const int &njet5_oppo_r15();
  const int &njet10_oppo_r15();
  const int &njet20_oppo_r15();
  const int &njet30_oppo_r15();
  const int &njet50_oppo_r15();
  const float &sumpt_oppo();
  const int &njet5_oppo();
  const int &njet10_oppo();
  const int &njet20_oppo();
  const int &njet30_oppo();
  const int &njet50_oppo();
  const float &sumpt_in_fatjet();
  const int &njet5_in_fatjet();
  const float &lepton_eta();
  const float &lepton_phi();
  const float &lepton_pt();
  const float &lepton_relIso03EA();
  const float &lepton_relIso04DB();
  const float &lepton_miniIsoEA();
  const float &lepton_chiso();
  const float &lepton_nhiso();
  const float &lepton_emiso();
  const float &lepton_ncorriso();
  const int &lepton_nChargedPf();
  const int &lepton_nPhotonPf();
  const int &lepton_nNeutralHadPf();
  const int &lepton_isFromW();
  const int &lepton_flavor();
  const int &nvtx();
  const vector<float> &pf_annuli_energy();
  const vector<float> &pf_pt();
  const vector<int> &pf_id();
  const vector<float> &pf_reta();
  const vector<float> &pf_rphi();
  const int &HLT_Ele27_WPLoose_Gsf();
  const int &HLT_Ele30_WPLoose_Gsf();
  const int &HLT_Ele45_WPLoose_Gsf();
  const int &HLT_Ele105_CaloIdVT_GsfTrkIdT();
  const int &HLT_Ele115_CaloIdVT_GsfTrkIdT();
  const int &HLT_IsoTkMu24();
  const int &HLT_IsoMu24();
  const int &HLT_SingleMu50();
  const int &HLT_SingleEl40();
  const int &HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165();
  const int &HLT_Mu50();
  const int &HLT_TkMu50();
  const int &HLT_AK8PFHT700_TrimR0p1PT0p03Mass50();
  const int &HLT_AK8PFJet360_TrimMass30();
  const int &HLT_PFHT800();
  const int &HLT_PFHT900();
  const int &HLT_PFHT650_WideJetMJJ900DEtaJJ1p5();
  const int &HLT_PFHT650_WideJetMJJ950DEtaJJ1p5();
  const int &HLT_AK8PFDiJet280_200_TrimMass30_CSVM_0p20();
  const int &pass_duplicate_se_sm();
  const int &pass_duplicate_sm_se();
  const int &nbOR();
  const int &nbORmed();
  const int &nbORtight();
  const int &nbOR30();
  const int &nbOR30med();
  const int &nbOR30tight();
  const int &nbOR40();
  const int &nbOR40med();
  const int &nbOR40tight();
  const int &nbOR50();
  const int &nbOR50med();
  const int &nbOR50tight();
  const float &htOR();
  const float &htOR40();
  const float &htOR50();
  const float &mhOR();
  const float &mhOR40();
  const float &mhOR50();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern hwwtree hww;
#endif

namespace tas {
  const int &run();
  const int &lumi();
  const unsigned long long &evt();
  const int &isData();
  const float &evt_scale1fb();
  const float &genps_weight();
  const float &xsec_br();
  const int &evt_passgoodrunlist();
  const TString &CMS4path();
  const int &CMS4index();
  const float &weight_fr_r1_f1();
  const float &weight_fr_r1_f2();
  const float &weight_fr_r1_f0p5();
  const float &weight_fr_r2_f1();
  const float &weight_fr_r2_f2();
  const float &weight_fr_r2_f0p5();
  const float &weight_fr_r0p5_f1();
  const float &weight_fr_r0p5_f2();
  const float &weight_fr_r0p5_f0p5();
  const float &weight_pdf_up();
  const float &weight_pdf_down();
  const float &weight_alphas_down();
  const float &weight_alphas_up();
  const float &weight_isr();
  const float &weight_isr_up();
  const float &weight_isr_down();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &lep_p4();
  const vector<int> &lep_id();
  const vector<int> &lep_idx();
  const vector<float> &lep_pt();
  const vector<float> &lep_eta();
  const vector<float> &lep_phi();
  const vector<float> &lep_miniIsoEA();
  const vector<float> &lep_relIso03EA();
  const vector<float> &lep_relIso04DB();
  const vector<float> &lep_customrelIso005EA();
  const vector<float> &lep_customrelIso01EA();
  const vector<float> &lep_customrelIso015EA();
  const vector<float> &lep_customrelIso02EA();
  const vector<float> &lep_customrelIso025EA();
  const vector<float> &lep_customrelIso03EA();
  const vector<float> &lep_customrelIso035EA();
  const vector<float> &lep_customrelIso04EA();
  const vector<float> &lep_customrelIso045EA();
  const vector<float> &lep_customrelIso05EA();
  const vector<float> &lep_customrelIso055EA();
  const vector<float> &lep_customrelIso06EA();
  const vector<float> &lep_customrelIso065EA();
  const vector<float> &lep_customrelIso07EA();
  const vector<float> &lep_customrelIso075EA();
  const vector<float> &lep_customrelIso08EA();
  const int &nrecolep();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep_p4_2();
  const float &lep_pt_0();
  const float &lep_pt_1();
  const float &lep_pt_2();
  const float &lep_eta_0();
  const float &lep_eta_1();
  const float &lep_eta_2();
  const float &lep_phi_0();
  const float &lep_phi_1();
  const float &lep_phi_2();
  const float &lep_miniIsoEA_0();
  const float &lep_miniIsoEA_1();
  const float &lep_miniIsoEA_2();
  const float &lep_relIso03EA_0();
  const float &lep_relIso03EA_1();
  const float &lep_relIso03EA_2();
  const float &lep_relIso04DB_0();
  const float &lep_relIso04DB_1();
  const float &lep_relIso04DB_2();
  const int &lep_id_0();
  const int &lep_id_1();
  const int &lep_id_2();
  const int &lep_idx_0();
  const int &lep_idx_1();
  const int &lep_idx_2();
  const int &nj();
  const int &nb();
  const int &nbmed();
  const int &nbtight();
  const int &nj50();
  const int &nb50();
  const int &nb50med();
  const int &nb50tight();
  const int &nb30();
  const int &nb30med();
  const int &nb30tight();
  const int &nb40();
  const int &nb40med();
  const int &nb40tight();
  const float &ht();
  const float &ht40();
  const float &ht50();
  const float &mh();
  const float &mh40();
  const float &mh50();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &alljets_p4();
  const vector<float> &alljets_pt();
  const vector<float> &alljets_eta();
  const vector<float> &alljets_phi();
  const vector<float> &alljets_csv();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_p4();
  const vector<float> &jets_pt();
  const vector<float> &jets_eta();
  const vector<float> &jets_phi();
  const vector<float> &jets_csv();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_up_p4();
  const vector<float> &jets_up_pt();
  const vector<float> &jets_up_eta();
  const vector<float> &jets_up_phi();
  const vector<float> &jets_up_csv();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_dn_p4();
  const vector<float> &jets_dn_pt();
  const vector<float> &jets_dn_eta();
  const vector<float> &jets_dn_phi();
  const vector<float> &jets_dn_csv();
  const int &nak8jets();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak8jets_p4();
  const vector<float> &ak8jets_pt();
  const vector<float> &ak8jets_eta();
  const vector<float> &ak8jets_phi();
  const vector<float> &ak8jets_softdropMass();
  const vector<float> &ak8jets_prunedMass();
  const vector<float> &ak8jets_trimmedMass();
  const vector<float> &ak8jets_mass();
  const vector<float> &ak8jets_nJettinessTau1();
  const vector<float> &ak8jets_nJettinessTau2();
  const vector<float> &ak8jets_softdropPuppiSubjet1();
  const vector<float> &ak8jets_softdropPuppiSubjet2();
  const vector<float> &ak8jets_puppi_softdropMass();
  const vector<float> &ak8jets_puppi_nJettinessTau1();
  const vector<float> &ak8jets_puppi_nJettinessTau2();
  const vector<float> &ak8jets_puppi_eta();
  const vector<float> &ak8jets_puppi_phi();
  const vector<float> &ak8jets_puppi_pt();
  const vector<float> &ak8jets_puppi_mass();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_p4_2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_up_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_up_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_up_p4_2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_dn_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_dn_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jets_dn_p4_2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak8jets_p4_0();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak8jets_p4_1();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak8jets_p4_2();
  const float &jets_pt_0();
  const float &jets_pt_1();
  const float &jets_pt_2();
  const float &jets_eta_0();
  const float &jets_eta_1();
  const float &jets_eta_2();
  const float &jets_phi_0();
  const float &jets_phi_1();
  const float &jets_phi_2();
  const float &jets_csv_0();
  const float &jets_csv_1();
  const float &jets_csv_2();
  const float &jets_up_pt_0();
  const float &jets_up_pt_1();
  const float &jets_up_pt_2();
  const float &jets_up_eta_0();
  const float &jets_up_eta_1();
  const float &jets_up_eta_2();
  const float &jets_up_phi_0();
  const float &jets_up_phi_1();
  const float &jets_up_phi_2();
  const float &jets_up_csv_0();
  const float &jets_up_csv_1();
  const float &jets_up_csv_2();
  const float &jets_dn_pt_0();
  const float &jets_dn_pt_1();
  const float &jets_dn_pt_2();
  const float &jets_dn_eta_0();
  const float &jets_dn_eta_1();
  const float &jets_dn_eta_2();
  const float &jets_dn_phi_0();
  const float &jets_dn_phi_1();
  const float &jets_dn_phi_2();
  const float &jets_dn_csv_0();
  const float &jets_dn_csv_1();
  const float &jets_dn_csv_2();
  const float &ak8jets_pt_0();
  const float &ak8jets_pt_1();
  const float &ak8jets_pt_2();
  const float &ak8jets_eta_0();
  const float &ak8jets_eta_1();
  const float &ak8jets_eta_2();
  const float &ak8jets_phi_0();
  const float &ak8jets_phi_1();
  const float &ak8jets_phi_2();
  const float &ak8jets_softdropMass_0();
  const float &ak8jets_softdropMass_1();
  const float &ak8jets_softdropMass_2();
  const float &ak8jets_prunedMass_0();
  const float &ak8jets_prunedMass_1();
  const float &ak8jets_prunedMass_2();
  const float &ak8jets_trimmedMass_0();
  const float &ak8jets_trimmedMass_1();
  const float &ak8jets_trimmedMass_2();
  const float &ak8jets_mass_0();
  const float &ak8jets_mass_1();
  const float &ak8jets_mass_2();
  const float &ak8jets_nJettinessTau1_0();
  const float &ak8jets_nJettinessTau1_1();
  const float &ak8jets_nJettinessTau1_2();
  const float &ak8jets_nJettinessTau2_0();
  const float &ak8jets_nJettinessTau2_1();
  const float &ak8jets_nJettinessTau2_2();
  const float &ak8jets_softdropPuppiSubjet1_0();
  const float &ak8jets_softdropPuppiSubjet1_1();
  const float &ak8jets_softdropPuppiSubjet1_2();
  const float &ak8jets_softdropPuppiSubjet2_0();
  const float &ak8jets_softdropPuppiSubjet2_1();
  const float &ak8jets_softdropPuppiSubjet2_2();
  const float &ak8jets_puppi_softdropMass_0();
  const float &ak8jets_puppi_softdropMass_1();
  const float &ak8jets_puppi_softdropMass_2();
  const float &ak8jets_puppi_nJettinessTau1_0();
  const float &ak8jets_puppi_nJettinessTau1_1();
  const float &ak8jets_puppi_nJettinessTau1_2();
  const float &ak8jets_puppi_nJettinessTau2_0();
  const float &ak8jets_puppi_nJettinessTau2_1();
  const float &ak8jets_puppi_nJettinessTau2_2();
  const float &ak8jets_puppi_eta_0();
  const float &ak8jets_puppi_eta_1();
  const float &ak8jets_puppi_eta_2();
  const float &ak8jets_puppi_phi_0();
  const float &ak8jets_puppi_phi_1();
  const float &ak8jets_puppi_phi_2();
  const float &ak8jets_puppi_pt_0();
  const float &ak8jets_puppi_pt_1();
  const float &ak8jets_puppi_pt_2();
  const float &ak8jets_puppi_mass_0();
  const float &ak8jets_puppi_mass_1();
  const float &ak8jets_puppi_mass_2();
  const float &weight_btagsf();
  const float &weight_btagsf_heavy_DN();
  const float &weight_btagsf_heavy_UP();
  const float &weight_btagsf_light_DN();
  const float &weight_btagsf_light_UP();
  const float &met_pt();
  const float &met_phi();
  const float &met_up_pt();
  const float &met_up_phi();
  const float &met_dn_pt();
  const float &met_dn_phi();
  const float &met_gen_pt();
  const float &met_gen_phi();
  const float &gen_ht();
  const float &isr_leadjet_dr();
  const float &higgs_met_dphi();
  const float &isr_recoisr_dr();
  const float &isr_recoisrmegajet_dr();
  const float &lepton_met_dphi();
  const float &quark0_met_dphi();
  const float &quark1_met_dphi();
  const float &wlep_met_dphi();
  const float &whad_met_dphi();
  const float &whad_recowhad_dr();
  const float &whad_recowhad_dphi();
  const float &whad_recowhad_deta();
  const float &whad_recowhad_ptratio();
  const float &higgs_recowhad_dr();
  const float &higgs_recowhad_dphi();
  const float &higgs_recowhad_deta();
  const float &higgs_recowhad_ptratio();
  const float &whad_leadak8_dr();
  const float &whad_leadak8_dphi();
  const float &whad_leadak8_deta();
  const float &whad_leadak8_ptratio();
  const float &higgs_leadak8_dr();
  const float &higgs_leadak8_dphi();
  const float &higgs_leadak8_deta();
  const float &higgs_leadak8_ptratio();
  const float &lepton_recolep_dr();
  const float &lepton_recolep_deta();
  const float &lepton_recolep_dphi();
  const float &lepton_recolep_ptratio();
  const float &neutrino_reconeutrino_dr();
  const float &neutrino_reconeutrino_deta();
  const float &neutrino_reconeutrino_dphi();
  const float &neutrino_reconeutrino_dpz();
  const float &neutrino_reconeutrino_dabspz();
  const float &neutrino_reconeutrino_ptratio();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggs_p4();
  const float &recohiggs_pt();
  const float &recohiggs_eta();
  const float &recohiggs_phi();
  const float &recohiggs_mass();
  const float &recohiggs_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggs2_p4();
  const float &recohiggs2_pt();
  const float &recohiggs2_eta();
  const float &recohiggs2_phi();
  const float &recohiggs2_mass();
  const float &recohiggs2_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggsinv_p4();
  const float &recohiggsinv_pt();
  const float &recohiggsinv_eta();
  const float &recohiggsinv_phi();
  const float &recohiggsinv_mass();
  const float &recohiggsinv_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggsmin_p4();
  const float &recohiggsmin_pt();
  const float &recohiggsmin_eta();
  const float &recohiggsmin_phi();
  const float &recohiggsmin_mass();
  const float &recohiggsmin_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recohiggsmin12_p4();
  const float &recohiggsmin12_pt();
  const float &recohiggsmin12_eta();
  const float &recohiggsmin12_phi();
  const float &recohiggsmin12_mass();
  const float &recohiggsmin12_mt();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoisr_p4();
  const float &recoisr_pt();
  const float &recoisr_eta();
  const float &recoisr_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoisrmegajet_p4();
  const float &recoisrmegajet_pt();
  const float &recoisrmegajet_eta();
  const float &recoisrmegajet_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoisrmegajet_n2_p4();
  const float &recoisrmegajet_n2_pt();
  const float &recoisrmegajet_n2_eta();
  const float &recoisrmegajet_n2_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recolepton_p4();
  const int &recolepton_id();
  const float &recolepton_pt();
  const float &recolepton_eta();
  const float &recolepton_phi();
  const float &recolepton_mt();
  const float &recolepton_met_dphi();
  const int &recoiswleplead();
  const float &reconeutrino_det();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &reconeutrino_p4();
  const float &reconeutrino_pt();
  const float &reconeutrino_eta();
  const float &reconeutrino_phi();
  const float &reconeutrino_met_dphi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &reconeutrino2_p4();
  const float &reconeutrino2_pt();
  const float &reconeutrino2_eta();
  const float &reconeutrino2_phi();
  const float &reconeutrino2_met_dphi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &reconeutrinoinv_p4();
  const float &reconeutrinoinv_pt();
  const float &reconeutrinoinv_eta();
  const float &reconeutrinoinv_phi();
  const float &reconeutrinoinv_met_dphi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowhad_p4();
  const float &recowhad_pt();
  const float &recowhad_eta();
  const float &recowhad_phi();
  const float &recowhad_mass();
  const float &recowhad_softdropMass();
  const float &recowhad_prunedMass();
  const float &recowhad_nJettinessTau1();
  const float &recowhad_nJettinessTau2();
  const float &recowhad_puppi_softdropMass();
  const float &recowhad_puppi_pt();
  const float &recowhad_puppi_eta();
  const float &recowhad_puppi_phi();
  const float &recowhad_puppi_mass();
  const float &recowhad_puppi_nJettinessTau1();
  const float &recowhad_puppi_nJettinessTau2();
  const float &recowhad_softdropPuppiSubjet1();
  const float &recowhad_softdropPuppiSubjet2();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowlep_p4();
  const float &recowlep_pt();
  const float &recowlep_eta();
  const float &recowlep_phi();
  const float &recowlep_mass();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recoleadjet_p4();
  const float &recoleadjet_pt();
  const float &recoleadjet_eta();
  const float &recoleadjet_phi();
  const float &recolepton_recowhad_dr();
  const float &recoleadjet_recolepton_dr();
  const float &recoleadjet_met_dphi();
  const float &recoleadjet_recowhad_dr();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowhad_minus_recolepton_p4();
  const float &recowhad_minus_recolepton_pt();
  const float &recowhad_minus_recolepton_eta();
  const float &recowhad_minus_recolepton_phi();
  const float &recowhad_minus_recolepton_mass();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &recowhad_minus_recolepton_positive_p4();
  const float &recowhad_minus_recolepton_positive_pt();
  const float &recowhad_minus_recolepton_positive_eta();
  const float &recowhad_minus_recolepton_positive_phi();
  const float &recowhad_minus_recolepton_positive_mass();
  const int &higgsdecay();
  const int &wstar_channel_id();
  const int &nlep();
  const int &nquark();
  const int &wa_id();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &isr_p4();
  const float &isr_pt();
  const float &isr_eta();
  const float &isr_phi();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &higgs_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &decay_p4();
  const vector<int> &decay_id();
  const vector<int> &decay_isstar();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &lepton_p4();
  const vector<int> &lepton_id();
  const vector<int> &lepton_isstar();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &neutrino_p4();
  const vector<int> &neutrino_id();
  const vector<int> &neutrino_isstar();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &quark_p4();
  const vector<int> &quark_id();
  const vector<int> &quark_isstar();
  const float &lqq_max_dr();
  const float &lq0_dr();
  const float &lq1_dr();
  const float &qq_dr();
  const float &decay_dr();
  const float &l_qq_dr();
  const float &lqq_mass();
  const float &lvqq_mt();
  const float &inneriso();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &pf_p4s();
  const vector<float> &pf_drs();
  const float &sumpt_oppo_r15();
  const int &njet5_oppo_r15();
  const int &njet10_oppo_r15();
  const int &njet20_oppo_r15();
  const int &njet30_oppo_r15();
  const int &njet50_oppo_r15();
  const float &sumpt_oppo();
  const int &njet5_oppo();
  const int &njet10_oppo();
  const int &njet20_oppo();
  const int &njet30_oppo();
  const int &njet50_oppo();
  const float &sumpt_in_fatjet();
  const int &njet5_in_fatjet();
  const float &lepton_eta();
  const float &lepton_phi();
  const float &lepton_pt();
  const float &lepton_relIso03EA();
  const float &lepton_relIso04DB();
  const float &lepton_miniIsoEA();
  const float &lepton_chiso();
  const float &lepton_nhiso();
  const float &lepton_emiso();
  const float &lepton_ncorriso();
  const int &lepton_nChargedPf();
  const int &lepton_nPhotonPf();
  const int &lepton_nNeutralHadPf();
  const int &lepton_isFromW();
  const int &lepton_flavor();
  const int &nvtx();
  const vector<float> &pf_annuli_energy();
  const vector<float> &pf_pt();
  const vector<int> &pf_id();
  const vector<float> &pf_reta();
  const vector<float> &pf_rphi();
  const int &HLT_Ele27_WPLoose_Gsf();
  const int &HLT_Ele30_WPLoose_Gsf();
  const int &HLT_Ele45_WPLoose_Gsf();
  const int &HLT_Ele105_CaloIdVT_GsfTrkIdT();
  const int &HLT_Ele115_CaloIdVT_GsfTrkIdT();
  const int &HLT_IsoTkMu24();
  const int &HLT_IsoMu24();
  const int &HLT_SingleMu50();
  const int &HLT_SingleEl40();
  const int &HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165();
  const int &HLT_Mu50();
  const int &HLT_TkMu50();
  const int &HLT_AK8PFHT700_TrimR0p1PT0p03Mass50();
  const int &HLT_AK8PFJet360_TrimMass30();
  const int &HLT_PFHT800();
  const int &HLT_PFHT900();
  const int &HLT_PFHT650_WideJetMJJ900DEtaJJ1p5();
  const int &HLT_PFHT650_WideJetMJJ950DEtaJJ1p5();
  const int &HLT_AK8PFDiJet280_200_TrimMass30_CSVM_0p20();
  const int &pass_duplicate_se_sm();
  const int &pass_duplicate_sm_se();
  const int &nbOR();
  const int &nbORmed();
  const int &nbORtight();
  const int &nbOR30();
  const int &nbOR30med();
  const int &nbOR30tight();
  const int &nbOR40();
  const int &nbOR40med();
  const int &nbOR40tight();
  const int &nbOR50();
  const int &nbOR50med();
  const int &nbOR50tight();
  const float &htOR();
  const float &htOR40();
  const float &htOR50();
  const float &mhOR();
  const float &mhOR40();
  const float &mhOR50();
}
#endif
